'use strict';function cov_y1wdaxy52(){var path="M:\\Production\\BareFootNomad\\models\\chat.js";var hash="53936fca45e559c6919d9eeed86830ca86a2f391";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"M:\\Production\\BareFootNomad\\models\\chat.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:27,column:2}},"2":{start:{line:17,column:2},end:{line:25,column:5}},"3":{start:{line:26,column:2},end:{line:26,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:27,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Chat","associate","models","init","message","TEXT","receiver","INTEGER","sender","image","STRING","modelName"],sourceRoot:"M:\\Production\\BareFootNomad\\models\\",sources:["chat.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Chat extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Chat.init({\r\n    message: DataTypes.TEXT,\r\n    receiver: DataTypes.INTEGER,\r\n    sender: DataTypes.INTEGER,\r\n    image: DataTypes.STRING\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Chat',\r\n  });\r\n  return Chat;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,IAAI,SAASN,KAAK,CAAC;IACvB;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,IAAI,CAACG,IAAI,CAAC;IACRC,OAAO,EAAEL,SAAS,CAACM,IAAI;IACvBC,QAAQ,EAAEP,SAAS,CAACQ,OAAO;IAC3BC,MAAM,EAAET,SAAS,CAACQ,OAAO;IACzBE,KAAK,EAAEV,SAAS,CAACW;EACnB,CAAC,EAAE;IACDZ,SAAS;IACTa,SAAS,EAAE;EACb,CAAC,CAAC;EACF,OAAOX,IAAI;AACb,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"53936fca45e559c6919d9eeed86830ca86a2f391"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_y1wdaxy52=function(){return actualCoverage;};}return actualCoverage;}cov_y1wdaxy52();const{Model}=(cov_y1wdaxy52().s[0]++,require('sequelize'));cov_y1wdaxy52().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_y1wdaxy52().f[0]++;class Chat extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_y1wdaxy52().f[1]++;}// define association here
}cov_y1wdaxy52().s[2]++;Chat.init({message:DataTypes.TEXT,receiver:DataTypes.INTEGER,sender:DataTypes.INTEGER,image:DataTypes.STRING},{sequelize,modelName:'Chat'});cov_y1wdaxy52().s[3]++;return Chat;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQ2hhdCIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJtZXNzYWdlIiwiVEVYVCIsInJlY2VpdmVyIiwiSU5URUdFUiIsInNlbmRlciIsImltYWdlIiwiU1RSSU5HIiwibW9kZWxOYW1lIl0sInNvdXJjZVJvb3QiOiJNOlxcUHJvZHVjdGlvblxcQmFyZUZvb3ROb21hZFxcbW9kZWxzXFwiLCJzb3VyY2VzIjpbImNoYXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5jb25zdCB7XHJcbiAgTW9kZWxcclxufSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG4gIGNsYXNzIENoYXQgZXh0ZW5kcyBNb2RlbCB7XHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cclxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBhIHBhcnQgb2YgU2VxdWVsaXplIGxpZmVjeWNsZS5cclxuICAgICAqIFRoZSBgbW9kZWxzL2luZGV4YCBmaWxlIHdpbGwgY2FsbCB0aGlzIG1ldGhvZCBhdXRvbWF0aWNhbGx5LlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYXNzb2NpYXRlKG1vZGVscykge1xyXG4gICAgICAvLyBkZWZpbmUgYXNzb2NpYXRpb24gaGVyZVxyXG4gICAgfVxyXG4gIH1cclxuICBDaGF0LmluaXQoe1xyXG4gICAgbWVzc2FnZTogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICByZWNlaXZlcjogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICBzZW5kZXI6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgaW1hZ2U6IERhdGFUeXBlcy5TVFJJTkdcclxuICB9LCB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdDaGF0JyxcclxuICB9KTtcclxuICByZXR1cm4gQ2hhdDtcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQ1osTUFBTTtFQUNKQTtBQUNGLENBQUMsR0FBR0MsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUN4QkMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFQyxTQUFTLEtBQUs7RUFDekMsTUFBTUMsSUFBSSxTQUFTTixLQUFLLENBQUM7SUFDdkI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtJQUNJLE9BQU9PLFNBQVNBLENBQUNDLE1BQU0sRUFBRTtNQUN2QjtJQUFBO0VBRUo7RUFDQUYsSUFBSSxDQUFDRyxJQUFJLENBQUM7SUFDUkMsT0FBTyxFQUFFTCxTQUFTLENBQUNNLElBQUk7SUFDdkJDLFFBQVEsRUFBRVAsU0FBUyxDQUFDUSxPQUFPO0lBQzNCQyxNQUFNLEVBQUVULFNBQVMsQ0FBQ1EsT0FBTztJQUN6QkUsS0FBSyxFQUFFVixTQUFTLENBQUNXO0VBQ25CLENBQUMsRUFBRTtJQUNEWixTQUFTO0lBQ1RhLFNBQVMsRUFBRTtFQUNiLENBQUMsQ0FBQztFQUNGLE9BQU9YLElBQUk7QUFDYixDQUFDIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfeTF3ZGF4eTUyIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJpbnB1dFNvdXJjZU1hcCIsInZlcnNpb24iLCJuYW1lcyIsInNvdXJjZVJvb3QiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJtYXBwaW5ncyIsImlnbm9yZUxpc3QiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiTW9kZWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIkNoYXQiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwibWVzc2FnZSIsIlRFWFQiLCJyZWNlaXZlciIsIklOVEVHRVIiLCJzZW5kZXIiLCJpbWFnZSIsIlNUUklORyIsIm1vZGVsTmFtZSJdLCJzb3VyY2VzIjpbIk06XFxQcm9kdWN0aW9uXFxCYXJlRm9vdE5vbWFkXFxtb2RlbHNcXC9jaGF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBDaGF0IGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgQ2hhdC5pbml0KHtcclxuICAgIG1lc3NhZ2U6IERhdGFUeXBlcy5URVhULFxyXG4gICAgcmVjZWl2ZXI6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgc2VuZGVyOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIGltYWdlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgfSwge1xyXG4gICAgc2VxdWVsaXplLFxyXG4gICAgbW9kZWxOYW1lOiAnQ2hhdCcsXHJcbiAgfSk7XHJcbiAgcmV0dXJuIENoYXQ7XHJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLFVBQUFBLGNBQUEsTUFBQUMsSUFBQSxzREFBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsa0RBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUUsS0FBQSxPQUFBQyxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLE1BQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxTQUFBSSxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxNQUFBTyxTQUFBLElBQUFDLENBQUEsMkJBQUFDLENBQUEsZUFBQUMsQ0FBQSxJQUFBQyxjQUFBLEVBQUFDLE9BQUEsR0FBQUMsS0FBQSwrS0FBQUMsVUFBQSwyQ0FBQUMsT0FBQSxhQUFBQyxjQUFBLHFxQkFBQUMsUUFBQSxzZEFBQUMsVUFBQSxLQUFBQyxlQUFBLDRDQUFBMUIsSUFBQSxpREFBQTJCLFFBQUEsQ0FBQTFCLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQXdCLFFBQUEsQ0FBQTVCLElBQUEsR0FBQTRCLFFBQUEsQ0FBQTVCLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUEyQixRQUFBLENBQUE1QixJQUFBLEVBQUFLLFlBQUEsTUFBQXdCLGNBQUEsQ0FBQUQsUUFBQSxDQUFBNUIsSUFBQSxHQWNWO0FBQUFELGFBQUEsU0FBQUEsQ0FBQSxTQUFBOEIsY0FBQSxXQUFBQSxjQUFBLEVBQUE5QixhQUFBLEdBYkYsS0FBTSxDQUNKK0IsS0FDRixDQUFDLEVBQUEvQixhQUFBLEdBQUFpQixDQUFBLE1BQUdlLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBQWhDLGFBQUEsR0FBQWlCLENBQUEsTUFDeEJnQixNQUFNLENBQUNDLE9BQU8sQ0FBRyxDQUFDQyxTQUFTLENBQUVDLFNBQVMsR0FBSyxDQUFBcEMsYUFBQSxHQUFBa0IsQ0FBQSxNQUN6QyxLQUFNLENBQUFtQixJQUFJLFFBQVMsQ0FBQU4sS0FBTSxDQUN2QjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0ksTUFBTyxDQUFBTyxTQUFTQSxDQUFDQyxNQUFNLENBQUUsQ0FBQXZDLGFBQUEsR0FBQWtCLENBQUEsTUFDdkI7QUFFSixDQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQSxNQUNBb0IsSUFBSSxDQUFDRyxJQUFJLENBQUMsQ0FDUkMsT0FBTyxDQUFFTCxTQUFTLENBQUNNLElBQUksQ0FDdkJDLFFBQVEsQ0FBRVAsU0FBUyxDQUFDUSxPQUFPLENBQzNCQyxNQUFNLENBQUVULFNBQVMsQ0FBQ1EsT0FBTyxDQUN6QkUsS0FBSyxDQUFFVixTQUFTLENBQUNXLE1BQ25CLENBQUMsQ0FBRSxDQUNEWixTQUFTLENBQ1RhLFNBQVMsQ0FBRSxNQUNiLENBQUMsQ0FBQyxDQUFBaEQsYUFBQSxHQUFBaUIsQ0FBQSxNQUNGLE1BQU8sQ0FBQW9CLElBQUksQ0FDYixDQUFDLEMiLCJpZ25vcmVMaXN0IjpbXX0=