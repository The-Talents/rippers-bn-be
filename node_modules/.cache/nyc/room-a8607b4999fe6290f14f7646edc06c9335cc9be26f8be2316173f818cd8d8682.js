'use strict';function cov_1iewh8ndfs(){var path="N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\models\\room.js";var hash="7a91c3d860b2e0faf61d92152cccf6c19c42aecd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\models\\room.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:37,column:2}},"2":{start:{line:17,column:2},end:{line:28,column:5}},"3":{start:{line:29,column:2},end:{line:35,column:4}},"4":{start:{line:31,column:4},end:{line:34,column:7}},"5":{start:{line:36,column:2},end:{line:36,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:37,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:19},end:{line:29,column:20}},loc:{start:{line:29,column:29},end:{line:35,column:3}},line:29}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0,"1":0,"2":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Room","associate","models","init","type","STRING","cost","DECIMAL","roomCode","allowNull","unique","modelName","belongsTo","Accommodation","foreignKey","as"],sourceRoot:"N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\models\\",sources:["room.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Room extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Room.init({\r\n    type: DataTypes.STRING,\r\n    cost: DataTypes.DECIMAL,\r\n    roomCode:\r\n    {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n      unique: true,\r\n    },\r\n  }, \r\n  \r\n  {\r\n    sequelize,\r\n    modelName: 'Room',\r\n  });\r\n\r\n  Room.associate = (models) => {\r\n    // Room belongs to an Accommodation\r\n    Room.belongsTo(models.Accommodation, {\r\n      foreignKey: \"accommodationId\",\r\n      as: \"accommodation\",\r\n    });\r\n  };\r\n  \r\n  return Room;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,IAAI,SAASN,KAAK,CAAC;IACvB;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,IAAI,CAACG,IAAI,CAAC;IACRC,IAAI,EAAEL,SAAS,CAACM,MAAM;IACtBC,IAAI,EAAEP,SAAS,CAACQ,OAAO;IACvBC,QAAQ,EACR;MACEJ,IAAI,EAAEL,SAAS,CAACM,MAAM;MACtBI,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;IACV;EACF,CAAC,EAED;IACEZ,SAAS;IACTa,SAAS,EAAE;EACb,CAAC,CAAC;EAEFX,IAAI,CAACC,SAAS,GAAIC,MAAM,IAAK;IAC3B;IACAF,IAAI,CAACY,SAAS,CAACV,MAAM,CAACW,aAAa,EAAE;MACnCC,UAAU,EAAE,iBAAiB;MAC7BC,EAAE,EAAE;IACN,CAAC,CAAC;EACJ,CAAC;EAED,OAAOf,IAAI;AACb,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7a91c3d860b2e0faf61d92152cccf6c19c42aecd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1iewh8ndfs=function(){return actualCoverage;};}return actualCoverage;}cov_1iewh8ndfs();const{Model}=(cov_1iewh8ndfs().s[0]++,require('sequelize'));cov_1iewh8ndfs().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1iewh8ndfs().f[0]++;class Room extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_1iewh8ndfs().f[1]++;}// define association here
}cov_1iewh8ndfs().s[2]++;Room.init({type:DataTypes.STRING,cost:DataTypes.DECIMAL,roomCode:{type:DataTypes.STRING,allowNull:false,unique:true}},{sequelize,modelName:'Room'});cov_1iewh8ndfs().s[3]++;Room.associate=models=>{cov_1iewh8ndfs().f[2]++;cov_1iewh8ndfs().s[4]++;// Room belongs to an Accommodation
Room.belongsTo(models.Accommodation,{foreignKey:"accommodationId",as:"accommodation"});};cov_1iewh8ndfs().s[5]++;return Room;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiUm9vbSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJ0eXBlIiwiU1RSSU5HIiwiY29zdCIsIkRFQ0lNQUwiLCJyb29tQ29kZSIsImFsbG93TnVsbCIsInVuaXF1ZSIsIm1vZGVsTmFtZSIsImJlbG9uZ3NUbyIsIkFjY29tbW9kYXRpb24iLCJmb3JlaWduS2V5IiwiYXMiXSwic291cmNlUm9vdCI6Ik46XFxQZXJzb25hbCBQcm9qZWN0c1xcVGhlIFRhbGVudFxcQmFyZWZvb3QtTm9tYW5kX3YxXFxyaXBwZXJzLWJuLWJlXFxtb2RlbHNcXCIsInNvdXJjZXMiOlsicm9vbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHtcclxuICBNb2RlbFxyXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgUm9vbSBleHRlbmRzIE1vZGVsIHtcclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxyXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IGEgcGFydCBvZiBTZXF1ZWxpemUgbGlmZWN5Y2xlLlxyXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3NvY2lhdGUobW9kZWxzKSB7XHJcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXHJcbiAgICB9XHJcbiAgfVxyXG4gIFJvb20uaW5pdCh7XHJcbiAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgY29zdDogRGF0YVR5cGVzLkRFQ0lNQUwsXHJcbiAgICByb29tQ29kZTpcclxuICAgIHtcclxuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgdW5pcXVlOiB0cnVlLFxyXG4gICAgfSxcclxuICB9LCBcclxuICBcclxuICB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdSb29tJyxcclxuICB9KTtcclxuXHJcbiAgUm9vbS5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcbiAgICAvLyBSb29tIGJlbG9uZ3MgdG8gYW4gQWNjb21tb2RhdGlvblxyXG4gICAgUm9vbS5iZWxvbmdzVG8obW9kZWxzLkFjY29tbW9kYXRpb24sIHtcclxuICAgICAgZm9yZWlnbktleTogXCJhY2NvbW1vZGF0aW9uSWRcIixcclxuICAgICAgYXM6IFwiYWNjb21tb2RhdGlvblwiLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuICByZXR1cm4gUm9vbTtcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQ1osTUFBTTtFQUNKQTtBQUNGLENBQUMsR0FBR0MsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUN4QkMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFQyxTQUFTLEtBQUs7RUFDekMsTUFBTUMsSUFBSSxTQUFTTixLQUFLLENBQUM7SUFDdkI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtJQUNJLE9BQU9PLFNBQVNBLENBQUNDLE1BQU0sRUFBRTtNQUN2QjtJQUFBO0VBRUo7RUFDQUYsSUFBSSxDQUFDRyxJQUFJLENBQUM7SUFDUkMsSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BQU07SUFDdEJDLElBQUksRUFBRVAsU0FBUyxDQUFDUSxPQUFPO0lBQ3ZCQyxRQUFRLEVBQ1I7TUFDRUosSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BQU07TUFDdEJJLFNBQVMsRUFBRSxLQUFLO01BQ2hCQyxNQUFNLEVBQUU7SUFDVjtFQUNGLENBQUMsRUFFRDtJQUNFWixTQUFTO0lBQ1RhLFNBQVMsRUFBRTtFQUNiLENBQUMsQ0FBQztFQUVGWCxJQUFJLENBQUNDLFNBQVMsR0FBSUMsTUFBTSxJQUFLO0lBQzNCO0lBQ0FGLElBQUksQ0FBQ1ksU0FBUyxDQUFDVixNQUFNLENBQUNXLGFBQWEsRUFBRTtNQUNuQ0MsVUFBVSxFQUFFLGlCQUFpQjtNQUM3QkMsRUFBRSxFQUFFO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUVELE9BQU9mLElBQUk7QUFDYixDQUFDIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWlld2g4bmRmcyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwibmFtZXMiLCJzb3VyY2VSb290Iiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibWFwcGluZ3MiLCJpZ25vcmVMaXN0IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJSb29tIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsInR5cGUiLCJTVFJJTkciLCJjb3N0IiwiREVDSU1BTCIsInJvb21Db2RlIiwiYWxsb3dOdWxsIiwidW5pcXVlIiwibW9kZWxOYW1lIiwiYmVsb25nc1RvIiwiQWNjb21tb2RhdGlvbiIsImZvcmVpZ25LZXkiLCJhcyJdLCJzb3VyY2VzIjpbIk46XFxQZXJzb25hbCBQcm9qZWN0c1xcVGhlIFRhbGVudFxcQmFyZWZvb3QtTm9tYW5kX3YxXFxyaXBwZXJzLWJuLWJlXFxtb2RlbHNcXC9yb29tLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBSb29tIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgUm9vbS5pbml0KHtcclxuICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBjb3N0OiBEYXRhVHlwZXMuREVDSU1BTCxcclxuICAgIHJvb21Db2RlOlxyXG4gICAge1xyXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB1bmlxdWU6IHRydWUsXHJcbiAgICB9LFxyXG4gIH0sIFxyXG4gIFxyXG4gIHtcclxuICAgIHNlcXVlbGl6ZSxcclxuICAgIG1vZGVsTmFtZTogJ1Jvb20nLFxyXG4gIH0pO1xyXG5cclxuICBSb29tLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuICAgIC8vIFJvb20gYmVsb25ncyB0byBhbiBBY2NvbW1vZGF0aW9uXHJcbiAgICBSb29tLmJlbG9uZ3NUbyhtb2RlbHMuQWNjb21tb2RhdGlvbiwge1xyXG4gICAgICBmb3JlaWduS2V5OiBcImFjY29tbW9kYXRpb25JZFwiLFxyXG4gICAgICBhczogXCJhY2NvbW1vZGF0aW9uXCIsXHJcbiAgICB9KTtcclxuICB9O1xyXG4gIFxyXG4gIHJldHVybiBSb29tO1xyXG59OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxVQUFBQSxlQUFBLE1BQUFDLElBQUEsNkZBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHlGQUFBTSxZQUFBLE9BQUFDLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFFLEtBQUEsT0FBQUMsSUFBQSxpQkFBQUMsSUFBQSxFQUFBTixLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsR0FBQUMsTUFBQSxNQUFBSyxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFELElBQUEsU0FBQUksSUFBQSxpQkFBQUMsSUFBQSxFQUFBTixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBSyxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFELElBQUEsVUFBQUksSUFBQSxpQkFBQUMsSUFBQSxFQUFBTixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBSyxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFELElBQUEsTUFBQU8sU0FBQSxJQUFBQyxDQUFBLHVDQUFBQyxDQUFBLHFCQUFBQyxDQUFBLElBQUFDLGNBQUEsRUFBQUMsT0FBQSxHQUFBQyxLQUFBLDhOQUFBQyxVQUFBLGtGQUFBQyxPQUFBLGFBQUFDLGNBQUEsczhCQUFBQyxRQUFBLG1wQkFBQUMsVUFBQSxLQUFBQyxlQUFBLDRDQUFBMUIsSUFBQSxpREFBQTJCLFFBQUEsQ0FBQTFCLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQXdCLFFBQUEsQ0FBQTVCLElBQUEsR0FBQTRCLFFBQUEsQ0FBQTVCLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUEyQixRQUFBLENBQUE1QixJQUFBLEVBQUFLLFlBQUEsTUFBQXdCLGNBQUEsQ0FBQUQsUUFBQSxDQUFBNUIsSUFBQSxHQWNWO0FBQUFELGNBQUEsU0FBQUEsQ0FBQSxTQUFBOEIsY0FBQSxXQUFBQSxjQUFBLEVBQUE5QixjQUFBLEdBYkYsS0FBTSxDQUNKK0IsS0FDRixDQUFDLEVBQUEvQixjQUFBLEdBQUFpQixDQUFBLE1BQUdlLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBQWhDLGNBQUEsR0FBQWlCLENBQUEsTUFDeEJnQixNQUFNLENBQUNDLE9BQU8sQ0FBRyxDQUFDQyxTQUFTLENBQUVDLFNBQVMsR0FBSyxDQUFBcEMsY0FBQSxHQUFBa0IsQ0FBQSxNQUN6QyxLQUFNLENBQUFtQixJQUFJLFFBQVMsQ0FBQU4sS0FBTSxDQUN2QjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0ksTUFBTyxDQUFBTyxTQUFTQSxDQUFDQyxNQUFNLENBQUUsQ0FBQXZDLGNBQUEsR0FBQWtCLENBQUEsTUFDdkI7QUFFSixDQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQSxNQUNBb0IsSUFBSSxDQUFDRyxJQUFJLENBQUMsQ0FDUkMsSUFBSSxDQUFFTCxTQUFTLENBQUNNLE1BQU0sQ0FDdEJDLElBQUksQ0FBRVAsU0FBUyxDQUFDUSxPQUFPLENBQ3ZCQyxRQUFRLENBQ1IsQ0FDRUosSUFBSSxDQUFFTCxTQUFTLENBQUNNLE1BQU0sQ0FDdEJJLFNBQVMsQ0FBRSxLQUFLLENBQ2hCQyxNQUFNLENBQUUsSUFDVixDQUNGLENBQUMsQ0FFRCxDQUNFWixTQUFTLENBQ1RhLFNBQVMsQ0FBRSxNQUNiLENBQUMsQ0FBQyxDQUFBaEQsY0FBQSxHQUFBaUIsQ0FBQSxNQUVGb0IsSUFBSSxDQUFDQyxTQUFTLENBQUlDLE1BQU0sRUFBSyxDQUFBdkMsY0FBQSxHQUFBa0IsQ0FBQSxNQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQSxNQUMzQjtBQUNBb0IsSUFBSSxDQUFDWSxTQUFTLENBQUNWLE1BQU0sQ0FBQ1csYUFBYSxDQUFFLENBQ25DQyxVQUFVLENBQUUsaUJBQWlCLENBQzdCQyxFQUFFLENBQUUsZUFDTixDQUFDLENBQUMsQ0FDSixDQUFDLENBQUFwRCxjQUFBLEdBQUFpQixDQUFBLE1BRUQsTUFBTyxDQUFBb0IsSUFBSSxDQUNiLENBQUMsQyIsImlnbm9yZUxpc3QiOltdfQ==