'use strict';function cov_1t804hrcni(){var path="N:\\Personal Projects\\work-projects\\eric-nomad\\models\\chat.js";var hash="c11f19074e03177f79e3376a2fb9975c0289b6a7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"N:\\Personal Projects\\work-projects\\eric-nomad\\models\\chat.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:27,column:2}},"2":{start:{line:17,column:2},end:{line:25,column:5}},"3":{start:{line:26,column:2},end:{line:26,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:27,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Chat","associate","models","init","message","TEXT","receiver","INTEGER","sender","image","STRING","modelName"],sourceRoot:"N:\\Personal Projects\\work-projects\\eric-nomad\\models\\",sources:["chat.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Chat extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Chat.init({\r\n    message: DataTypes.TEXT,\r\n    receiver: DataTypes.INTEGER,\r\n    sender: DataTypes.INTEGER,\r\n    image: DataTypes.STRING\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Chat',\r\n  });\r\n  return Chat;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,IAAI,SAASN,KAAK,CAAC;IACvB;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,IAAI,CAACG,IAAI,CAAC;IACRC,OAAO,EAAEL,SAAS,CAACM,IAAI;IACvBC,QAAQ,EAAEP,SAAS,CAACQ,OAAO;IAC3BC,MAAM,EAAET,SAAS,CAACQ,OAAO;IACzBE,KAAK,EAAEV,SAAS,CAACW;EACnB,CAAC,EAAE;IACDZ,SAAS;IACTa,SAAS,EAAE;EACb,CAAC,CAAC;EACF,OAAOX,IAAI;AACb,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c11f19074e03177f79e3376a2fb9975c0289b6a7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1t804hrcni=function(){return actualCoverage;};}return actualCoverage;}cov_1t804hrcni();const{Model}=(cov_1t804hrcni().s[0]++,require('sequelize'));cov_1t804hrcni().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1t804hrcni().f[0]++;class Chat extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_1t804hrcni().f[1]++;}// define association here
}cov_1t804hrcni().s[2]++;Chat.init({message:DataTypes.TEXT,receiver:DataTypes.INTEGER,sender:DataTypes.INTEGER,image:DataTypes.STRING},{sequelize,modelName:'Chat'});cov_1t804hrcni().s[3]++;return Chat;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQ2hhdCIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJtZXNzYWdlIiwiVEVYVCIsInJlY2VpdmVyIiwiSU5URUdFUiIsInNlbmRlciIsImltYWdlIiwiU1RSSU5HIiwibW9kZWxOYW1lIl0sInNvdXJjZVJvb3QiOiJOOlxcUGVyc29uYWwgUHJvamVjdHNcXHdvcmstcHJvamVjdHNcXGVyaWMtbm9tYWRcXG1vZGVsc1xcIiwic291cmNlcyI6WyJjaGF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBDaGF0IGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgQ2hhdC5pbml0KHtcclxuICAgIG1lc3NhZ2U6IERhdGFUeXBlcy5URVhULFxyXG4gICAgcmVjZWl2ZXI6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgc2VuZGVyOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIGltYWdlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgfSwge1xyXG4gICAgc2VxdWVsaXplLFxyXG4gICAgbW9kZWxOYW1lOiAnQ2hhdCcsXHJcbiAgfSk7XHJcbiAgcmV0dXJuIENoYXQ7XHJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLE1BQU07RUFDSkE7QUFDRixDQUFDLEdBQUdDLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDeEJDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLENBQUNDLFNBQVMsRUFBRUMsU0FBUyxLQUFLO0VBQ3pDLE1BQU1DLElBQUksU0FBU04sS0FBSyxDQUFDO0lBQ3ZCO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7SUFDSSxPQUFPTyxTQUFTQSxDQUFDQyxNQUFNLEVBQUU7TUFDdkI7SUFBQTtFQUVKO0VBQ0FGLElBQUksQ0FBQ0csSUFBSSxDQUFDO0lBQ1JDLE9BQU8sRUFBRUwsU0FBUyxDQUFDTSxJQUFJO0lBQ3ZCQyxRQUFRLEVBQUVQLFNBQVMsQ0FBQ1EsT0FBTztJQUMzQkMsTUFBTSxFQUFFVCxTQUFTLENBQUNRLE9BQU87SUFDekJFLEtBQUssRUFBRVYsU0FBUyxDQUFDVztFQUNuQixDQUFDLEVBQUU7SUFDRFosU0FBUztJQUNUYSxTQUFTLEVBQUU7RUFDYixDQUFDLENBQUM7RUFDRixPQUFPWCxJQUFJO0FBQ2IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXQ4MDRocmNuaSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwibmFtZXMiLCJzb3VyY2VSb290Iiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibWFwcGluZ3MiLCJpZ25vcmVMaXN0IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJDaGF0IiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsIm1lc3NhZ2UiLCJURVhUIiwicmVjZWl2ZXIiLCJJTlRFR0VSIiwic2VuZGVyIiwiaW1hZ2UiLCJTVFJJTkciLCJtb2RlbE5hbWUiXSwic291cmNlcyI6WyJOOlxcUGVyc29uYWwgUHJvamVjdHNcXHdvcmstcHJvamVjdHNcXGVyaWMtbm9tYWRcXG1vZGVsc1xcL2NoYXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5jb25zdCB7XHJcbiAgTW9kZWxcclxufSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG4gIGNsYXNzIENoYXQgZXh0ZW5kcyBNb2RlbCB7XHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cclxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBhIHBhcnQgb2YgU2VxdWVsaXplIGxpZmVjeWNsZS5cclxuICAgICAqIFRoZSBgbW9kZWxzL2luZGV4YCBmaWxlIHdpbGwgY2FsbCB0aGlzIG1ldGhvZCBhdXRvbWF0aWNhbGx5LlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYXNzb2NpYXRlKG1vZGVscykge1xyXG4gICAgICAvLyBkZWZpbmUgYXNzb2NpYXRpb24gaGVyZVxyXG4gICAgfVxyXG4gIH1cclxuICBDaGF0LmluaXQoe1xyXG4gICAgbWVzc2FnZTogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICByZWNlaXZlcjogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICBzZW5kZXI6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgaW1hZ2U6IERhdGFUeXBlcy5TVFJJTkdcclxuICB9LCB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdDaGF0JyxcclxuICB9KTtcclxuICByZXR1cm4gQ2hhdDtcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksVUFBQUEsZUFBQSxNQUFBQyxJQUFBLHlFQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSxxRUFBQU0sWUFBQSxPQUFBQyxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsR0FBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxPQUFBRSxLQUFBLE9BQUFDLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFNBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLE1BQUFPLFNBQUEsSUFBQUMsQ0FBQSwyQkFBQUMsQ0FBQSxlQUFBQyxDQUFBLElBQUFDLGNBQUEsRUFBQUMsT0FBQSxHQUFBQyxLQUFBLCtLQUFBQyxVQUFBLDhEQUFBQyxPQUFBLGFBQUFDLGNBQUEscXFCQUFBQyxRQUFBLHNkQUFBQyxVQUFBLEtBQUFDLGVBQUEsNENBQUExQixJQUFBLGlEQUFBMkIsUUFBQSxDQUFBMUIsTUFBQSxDQUFBRSxHQUFBLElBQUFGLE1BQUEsQ0FBQUUsR0FBQSxVQUFBd0IsUUFBQSxDQUFBNUIsSUFBQSxHQUFBNEIsUUFBQSxDQUFBNUIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQTJCLFFBQUEsQ0FBQTVCLElBQUEsRUFBQUssWUFBQSxNQUFBd0IsY0FBQSxDQUFBRCxRQUFBLENBQUE1QixJQUFBLEdBY1Y7QUFBQUQsY0FBQSxTQUFBQSxDQUFBLFNBQUE4QixjQUFBLFdBQUFBLGNBQUEsRUFBQTlCLGNBQUEsR0FiRixLQUFNLENBQ0orQixLQUNGLENBQUMsRUFBQS9CLGNBQUEsR0FBQWlCLENBQUEsTUFBR2UsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFBaEMsY0FBQSxHQUFBaUIsQ0FBQSxNQUN4QmdCLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQUNDLFNBQVMsQ0FBRUMsU0FBUyxHQUFLLENBQUFwQyxjQUFBLEdBQUFrQixDQUFBLE1BQ3pDLEtBQU0sQ0FBQW1CLElBQUksUUFBUyxDQUFBTixLQUFNLENBQ3ZCO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FDSSxNQUFPLENBQUFPLFNBQVNBLENBQUNDLE1BQU0sQ0FBRSxDQUFBdkMsY0FBQSxHQUFBa0IsQ0FBQSxNQUN2QjtBQUVKLENBQUFsQixjQUFBLEdBQUFpQixDQUFBLE1BQ0FvQixJQUFJLENBQUNHLElBQUksQ0FBQyxDQUNSQyxPQUFPLENBQUVMLFNBQVMsQ0FBQ00sSUFBSSxDQUN2QkMsUUFBUSxDQUFFUCxTQUFTLENBQUNRLE9BQU8sQ0FDM0JDLE1BQU0sQ0FBRVQsU0FBUyxDQUFDUSxPQUFPLENBQ3pCRSxLQUFLLENBQUVWLFNBQVMsQ0FBQ1csTUFDbkIsQ0FBQyxDQUFFLENBQ0RaLFNBQVMsQ0FDVGEsU0FBUyxDQUFFLE1BQ2IsQ0FBQyxDQUFDLENBQUFoRCxjQUFBLEdBQUFpQixDQUFBLE1BQ0YsTUFBTyxDQUFBb0IsSUFBSSxDQUNiLENBQUMsQyIsImlnbm9yZUxpc3QiOltdfQ==