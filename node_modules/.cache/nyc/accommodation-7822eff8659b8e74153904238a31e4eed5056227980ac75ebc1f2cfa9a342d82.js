'use strict';function cov_1w1ij513si(){var path="M:\\Production\\eric-nomad\\models\\accommodation.js";var hash="b82eb1c4cf1998d631535ac356021ff099280305";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"M:\\Production\\eric-nomad\\models\\accommodation.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:37,column:2}},"2":{start:{line:17,column:2},end:{line:28,column:5}},"3":{start:{line:29,column:2},end:{line:35,column:4}},"4":{start:{line:31,column:4},end:{line:34,column:7}},"5":{start:{line:36,column:2},end:{line:36,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:37,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:28},end:{line:29,column:29}},loc:{start:{line:29,column:38},end:{line:35,column:3}},line:29}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0,"1":0,"2":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Accommodation","associate","models","init","name","STRING","numberOfRooms","INTEGER","description","TEXT","location","geolocation","services","amenities","modelName","hasMany","Room","foreignKey","as"],sourceRoot:"M:\\Production\\eric-nomad\\models\\",sources:["accommodation.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Accommodation extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Accommodation.init({\r\n    name: DataTypes.STRING,\r\n    numberOfRooms: DataTypes.INTEGER,\r\n    description: DataTypes.TEXT,\r\n    location: DataTypes.STRING,\r\n    geolocation: DataTypes.STRING,\r\n    services: DataTypes.TEXT,\r\n    amenities: DataTypes.TEXT\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Accommodation',\r\n  });\r\n\r\n  Accommodation.associate = (models) => {\r\n    // Accommodation has many Rooms\r\n    Accommodation.hasMany(models.Room, {\r\n      foreignKey: \"accommodationId\",\r\n      as: \"rooms\",\r\n    });\r\n  };\r\n  \r\n  return Accommodation;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,aAAa,SAASN,KAAK,CAAC;IAChC;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,aAAa,CAACG,IAAI,CAAC;IACjBC,IAAI,EAAEL,SAAS,CAACM,MAAM;IACtBC,aAAa,EAAEP,SAAS,CAACQ,OAAO;IAChCC,WAAW,EAAET,SAAS,CAACU,IAAI;IAC3BC,QAAQ,EAAEX,SAAS,CAACM,MAAM;IAC1BM,WAAW,EAAEZ,SAAS,CAACM,MAAM;IAC7BO,QAAQ,EAAEb,SAAS,CAACU,IAAI;IACxBI,SAAS,EAAEd,SAAS,CAACU;EACvB,CAAC,EAAE;IACDX,SAAS;IACTgB,SAAS,EAAE;EACb,CAAC,CAAC;EAEFd,aAAa,CAACC,SAAS,GAAIC,MAAM,IAAK;IACpC;IACAF,aAAa,CAACe,OAAO,CAACb,MAAM,CAACc,IAAI,EAAE;MACjCC,UAAU,EAAE,iBAAiB;MAC7BC,EAAE,EAAE;IACN,CAAC,CAAC;EACJ,CAAC;EAED,OAAOlB,aAAa;AACtB,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b82eb1c4cf1998d631535ac356021ff099280305"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1w1ij513si=function(){return actualCoverage;};}return actualCoverage;}cov_1w1ij513si();const{Model}=(cov_1w1ij513si().s[0]++,require('sequelize'));cov_1w1ij513si().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1w1ij513si().f[0]++;class Accommodation extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_1w1ij513si().f[1]++;}// define association here
}cov_1w1ij513si().s[2]++;Accommodation.init({name:DataTypes.STRING,numberOfRooms:DataTypes.INTEGER,description:DataTypes.TEXT,location:DataTypes.STRING,geolocation:DataTypes.STRING,services:DataTypes.TEXT,amenities:DataTypes.TEXT},{sequelize,modelName:'Accommodation'});cov_1w1ij513si().s[3]++;Accommodation.associate=models=>{cov_1w1ij513si().f[2]++;cov_1w1ij513si().s[4]++;// Accommodation has many Rooms
Accommodation.hasMany(models.Room,{foreignKey:"accommodationId",as:"rooms"});};cov_1w1ij513si().s[5]++;return Accommodation;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQWNjb21tb2RhdGlvbiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJuYW1lIiwiU1RSSU5HIiwibnVtYmVyT2ZSb29tcyIsIklOVEVHRVIiLCJkZXNjcmlwdGlvbiIsIlRFWFQiLCJsb2NhdGlvbiIsImdlb2xvY2F0aW9uIiwic2VydmljZXMiLCJhbWVuaXRpZXMiLCJtb2RlbE5hbWUiLCJoYXNNYW55IiwiUm9vbSIsImZvcmVpZ25LZXkiLCJhcyJdLCJzb3VyY2VSb290IjoiTTpcXFByb2R1Y3Rpb25cXGVyaWMtbm9tYWRcXG1vZGVsc1xcIiwic291cmNlcyI6WyJhY2NvbW1vZGF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBBY2NvbW1vZGF0aW9uIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgQWNjb21tb2RhdGlvbi5pbml0KHtcclxuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBudW1iZXJPZlJvb21zOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIGRlc2NyaXB0aW9uOiBEYXRhVHlwZXMuVEVYVCxcclxuICAgIGxvY2F0aW9uOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgZ2VvbG9jYXRpb246IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBzZXJ2aWNlczogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICBhbWVuaXRpZXM6IERhdGFUeXBlcy5URVhUXHJcbiAgfSwge1xyXG4gICAgc2VxdWVsaXplLFxyXG4gICAgbW9kZWxOYW1lOiAnQWNjb21tb2RhdGlvbicsXHJcbiAgfSk7XHJcblxyXG4gIEFjY29tbW9kYXRpb24uYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xyXG4gICAgLy8gQWNjb21tb2RhdGlvbiBoYXMgbWFueSBSb29tc1xyXG4gICAgQWNjb21tb2RhdGlvbi5oYXNNYW55KG1vZGVscy5Sb29tLCB7XHJcbiAgICAgIGZvcmVpZ25LZXk6IFwiYWNjb21tb2RhdGlvbklkXCIsXHJcbiAgICAgIGFzOiBcInJvb21zXCIsXHJcbiAgICB9KTtcclxuICB9O1xyXG4gIFxyXG4gIHJldHVybiBBY2NvbW1vZGF0aW9uO1xyXG59OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWixNQUFNO0VBQ0pBO0FBQ0YsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQ3hCQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDQyxTQUFTLEVBQUVDLFNBQVMsS0FBSztFQUN6QyxNQUFNQyxhQUFhLFNBQVNOLEtBQUssQ0FBQztJQUNoQztBQUNKO0FBQ0E7QUFDQTtBQUNBO0lBQ0ksT0FBT08sU0FBU0EsQ0FBQ0MsTUFBTSxFQUFFO01BQ3ZCO0lBQUE7RUFFSjtFQUNBRixhQUFhLENBQUNHLElBQUksQ0FBQztJQUNqQkMsSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BQU07SUFDdEJDLGFBQWEsRUFBRVAsU0FBUyxDQUFDUSxPQUFPO0lBQ2hDQyxXQUFXLEVBQUVULFNBQVMsQ0FBQ1UsSUFBSTtJQUMzQkMsUUFBUSxFQUFFWCxTQUFTLENBQUNNLE1BQU07SUFDMUJNLFdBQVcsRUFBRVosU0FBUyxDQUFDTSxNQUFNO0lBQzdCTyxRQUFRLEVBQUViLFNBQVMsQ0FBQ1UsSUFBSTtJQUN4QkksU0FBUyxFQUFFZCxTQUFTLENBQUNVO0VBQ3ZCLENBQUMsRUFBRTtJQUNEWCxTQUFTO0lBQ1RnQixTQUFTLEVBQUU7RUFDYixDQUFDLENBQUM7RUFFRmQsYUFBYSxDQUFDQyxTQUFTLEdBQUlDLE1BQU0sSUFBSztJQUNwQztJQUNBRixhQUFhLENBQUNlLE9BQU8sQ0FBQ2IsTUFBTSxDQUFDYyxJQUFJLEVBQUU7TUFDakNDLFVBQVUsRUFBRSxpQkFBaUI7TUFDN0JDLEVBQUUsRUFBRTtJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFFRCxPQUFPbEIsYUFBYTtBQUN0QixDQUFDIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXcxaWo1MTNzaSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwibmFtZXMiLCJzb3VyY2VSb290Iiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibWFwcGluZ3MiLCJpZ25vcmVMaXN0IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJBY2NvbW1vZGF0aW9uIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsIlNUUklORyIsIm51bWJlck9mUm9vbXMiLCJJTlRFR0VSIiwiZGVzY3JpcHRpb24iLCJURVhUIiwibG9jYXRpb24iLCJnZW9sb2NhdGlvbiIsInNlcnZpY2VzIiwiYW1lbml0aWVzIiwibW9kZWxOYW1lIiwiaGFzTWFueSIsIlJvb20iLCJmb3JlaWduS2V5IiwiYXMiXSwic291cmNlcyI6WyJNOlxcUHJvZHVjdGlvblxcZXJpYy1ub21hZFxcbW9kZWxzXFwvYWNjb21tb2RhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHtcclxuICBNb2RlbFxyXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgQWNjb21tb2RhdGlvbiBleHRlbmRzIE1vZGVsIHtcclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxyXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IGEgcGFydCBvZiBTZXF1ZWxpemUgbGlmZWN5Y2xlLlxyXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3NvY2lhdGUobW9kZWxzKSB7XHJcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXHJcbiAgICB9XHJcbiAgfVxyXG4gIEFjY29tbW9kYXRpb24uaW5pdCh7XHJcbiAgICBuYW1lOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgbnVtYmVyT2ZSb29tczogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICBkZXNjcmlwdGlvbjogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICBsb2NhdGlvbjogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGdlb2xvY2F0aW9uOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgc2VydmljZXM6IERhdGFUeXBlcy5URVhULFxyXG4gICAgYW1lbml0aWVzOiBEYXRhVHlwZXMuVEVYVFxyXG4gIH0sIHtcclxuICAgIHNlcXVlbGl6ZSxcclxuICAgIG1vZGVsTmFtZTogJ0FjY29tbW9kYXRpb24nLFxyXG4gIH0pO1xyXG5cclxuICBBY2NvbW1vZGF0aW9uLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuICAgIC8vIEFjY29tbW9kYXRpb24gaGFzIG1hbnkgUm9vbXNcclxuICAgIEFjY29tbW9kYXRpb24uaGFzTWFueShtb2RlbHMuUm9vbSwge1xyXG4gICAgICBmb3JlaWduS2V5OiBcImFjY29tbW9kYXRpb25JZFwiLFxyXG4gICAgICBhczogXCJyb29tc1wiLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuICByZXR1cm4gQWNjb21tb2RhdGlvbjtcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksVUFBQUEsZUFBQSxNQUFBQyxJQUFBLDREQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSx3REFBQU0sWUFBQSxPQUFBQyxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsR0FBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxPQUFBRSxLQUFBLE9BQUFDLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFNBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFVBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLE1BQUFPLFNBQUEsSUFBQUMsQ0FBQSx1Q0FBQUMsQ0FBQSxxQkFBQUMsQ0FBQSxJQUFBQyxjQUFBLEVBQUFDLE9BQUEsR0FBQUMsS0FBQSwwUUFBQUMsVUFBQSx3Q0FBQUMsT0FBQSxzQkFBQUMsY0FBQSwwaENBQUFDLFFBQUEsK3RCQUFBQyxVQUFBLEtBQUFDLGVBQUEsNENBQUExQixJQUFBLGlEQUFBMkIsUUFBQSxDQUFBMUIsTUFBQSxDQUFBRSxHQUFBLElBQUFGLE1BQUEsQ0FBQUUsR0FBQSxVQUFBd0IsUUFBQSxDQUFBNUIsSUFBQSxHQUFBNEIsUUFBQSxDQUFBNUIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQTJCLFFBQUEsQ0FBQTVCLElBQUEsRUFBQUssWUFBQSxNQUFBd0IsY0FBQSxDQUFBRCxRQUFBLENBQUE1QixJQUFBLEdBY1Y7QUFBQUQsY0FBQSxTQUFBQSxDQUFBLFNBQUE4QixjQUFBLFdBQUFBLGNBQUEsRUFBQTlCLGNBQUEsR0FiRixLQUFNLENBQ0orQixLQUNGLENBQUMsRUFBQS9CLGNBQUEsR0FBQWlCLENBQUEsTUFBR2UsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFBaEMsY0FBQSxHQUFBaUIsQ0FBQSxNQUN4QmdCLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQUNDLFNBQVMsQ0FBRUMsU0FBUyxHQUFLLENBQUFwQyxjQUFBLEdBQUFrQixDQUFBLE1BQ3pDLEtBQU0sQ0FBQW1CLGFBQWEsUUFBUyxDQUFBTixLQUFNLENBQ2hDO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FDSSxNQUFPLENBQUFPLFNBQVNBLENBQUNDLE1BQU0sQ0FBRSxDQUFBdkMsY0FBQSxHQUFBa0IsQ0FBQSxNQUN2QjtBQUVKLENBQUFsQixjQUFBLEdBQUFpQixDQUFBLE1BQ0FvQixhQUFhLENBQUNHLElBQUksQ0FBQyxDQUNqQjNCLElBQUksQ0FBRXVCLFNBQVMsQ0FBQ0ssTUFBTSxDQUN0QkMsYUFBYSxDQUFFTixTQUFTLENBQUNPLE9BQU8sQ0FDaENDLFdBQVcsQ0FBRVIsU0FBUyxDQUFDUyxJQUFJLENBQzNCQyxRQUFRLENBQUVWLFNBQVMsQ0FBQ0ssTUFBTSxDQUMxQk0sV0FBVyxDQUFFWCxTQUFTLENBQUNLLE1BQU0sQ0FDN0JPLFFBQVEsQ0FBRVosU0FBUyxDQUFDUyxJQUFJLENBQ3hCSSxTQUFTLENBQUViLFNBQVMsQ0FBQ1MsSUFDdkIsQ0FBQyxDQUFFLENBQ0RWLFNBQVMsQ0FDVGUsU0FBUyxDQUFFLGVBQ2IsQ0FBQyxDQUFDLENBQUFsRCxjQUFBLEdBQUFpQixDQUFBLE1BRUZvQixhQUFhLENBQUNDLFNBQVMsQ0FBSUMsTUFBTSxFQUFLLENBQUF2QyxjQUFBLEdBQUFrQixDQUFBLE1BQUFsQixjQUFBLEdBQUFpQixDQUFBLE1BQ3BDO0FBQ0FvQixhQUFhLENBQUNjLE9BQU8sQ0FBQ1osTUFBTSxDQUFDYSxJQUFJLENBQUUsQ0FDakNDLFVBQVUsQ0FBRSxpQkFBaUIsQ0FDN0JDLEVBQUUsQ0FBRSxPQUNOLENBQUMsQ0FBQyxDQUNKLENBQUMsQ0FBQXRELGNBQUEsR0FBQWlCLENBQUEsTUFFRCxNQUFPLENBQUFvQixhQUFhLENBQ3RCLENBQUMsQyIsImlnbm9yZUxpc3QiOltdfQ==