function cov_8xupy7a1z(){var path="D:\\rippers\\rippers-bn-be\\src\\Services\\authService.js";var hash="119db490eec2bbe52d3f37b591ff24cd0568b24a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\rippers\\rippers-bn-be\\src\\Services\\authService.js",statementMap:{"0":{start:{line:3,column:4},end:{line:3,column:34}},"1":{start:{line:6,column:4},end:{line:6,column:27}},"2":{start:{line:7,column:12},end:{line:7,column:35}},"3":{start:{line:8,column:15},end:{line:8,column:61}},"4":{start:{line:9,column:20},end:{line:55,column:1}},"5":{start:{line:10,column:2},end:{line:54,column:3}},"6":{start:{line:12,column:19},end:{line:15,column:6}},"7":{start:{line:16,column:20},end:{line:16,column:39}},"8":{start:{line:17,column:18},end:{line:17,column:31}},"9":{start:{line:18,column:22},end:{line:18,column:40}},"10":{start:{line:19,column:21},end:{line:19,column:40}},"11":{start:{line:20,column:27},end:{line:20,column:42}},"12":{start:{line:23,column:15},end:{line:27,column:6}},"13":{start:{line:30,column:4},end:{line:34,column:5}},"14":{start:{line:31,column:20},end:{line:31,column:88}},"15":{start:{line:32,column:6},end:{line:32,column:29}},"16":{start:{line:33,column:6},end:{line:33,column:18}},"17":{start:{line:37,column:22},end:{line:42,column:6}},"18":{start:{line:43,column:4},end:{line:50,column:6}},"19":{start:{line:52,column:4},end:{line:52,column:50}},"20":{start:{line:53,column:4},end:{line:53,column:16}},"21":{start:{line:56,column:0},end:{line:58,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:20},end:{line:9,column:21}},loc:{start:{line:9,column:35},end:{line:55,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:30,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:34,column:5}},{start:{line:30,column:4},end:{line:34,column:5}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["OAuth2Client","require","User","jwt","client","process","env","GOOGLE_CLIENT_ID","googleLogin","token","ticket","verifyIdToken","idToken","audience","payload","getPayload","email","firstName","given_name","lastName","family_name","profilePicture","picture","user","findOne","where","error","Error","statusCode","authToken","sign","userId","id","role","JWT_SECRET","expiresIn","console","module","exports"],sourceRoot:"D:\\rippers\\rippers-bn-be\\src\\Services\\",sources:["authService.js"],sourcesContent:["const { OAuth2Client } = require('google-auth-library');\r\nconst { User } = require('../../models'); // Adjust the path as needed\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst client = new OAuth2Client(process.env.GOOGLE_CLIENT_ID);\r\n\r\nconst googleLogin = async (token) => {\r\n  try {\r\n    // Verify Google token\r\n    const ticket = await client.verifyIdToken({\r\n      idToken: token,\r\n      audience: process.env.GOOGLE_CLIENT_ID,\r\n    });\r\n\r\n    const payload = ticket.getPayload();\r\n    const email = payload.email; // Use email to check if the user exists\r\n    const firstName = payload.given_name;\r\n    const lastName = payload.family_name;\r\n    const profilePicture = payload.picture;\r\n\r\n    // Check if the user exists in the database using email\r\n    let user = await User.findOne({ where: { email } });\r\n\r\n    // If the user does not exist, create a new user\r\n    if (!user) {\r\n        const error = new Error('Account does not exist. Please create an account first.');\r\n        error.statusCode = 404;\r\n        throw error;\r\n      }\r\n\r\n    // Generate JWT token\r\n    const authToken = jwt.sign({ userId: user.id, role: user.role }, process.env.JWT_SECRET, { expiresIn: '1h' });\r\n\r\n    return {\r\n      userId: user.id,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      profilePicture: user.profilePicture,\r\n      token: authToken,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error in googleLogin:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nmodule.exports = { googleLogin };"],mappings:"AAAA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACvD,MAAM;EAAEC;AAAK,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAC1C,MAAME,GAAG,GAAGF,OAAO,CAAC,cAAc,CAAC;AAEnC,MAAMG,MAAM,GAAG,IAAIJ,YAAY,CAACK,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC;AAE7D,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACnC,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,aAAa,CAAC;MACxCC,OAAO,EAAEH,KAAK;MACdI,QAAQ,EAAER,OAAO,CAACC,GAAG,CAACC;IACxB,CAAC,CAAC;IAEF,MAAMO,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,CAAC;IACnC,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK,CAAC,CAAC;IAC7B,MAAMC,SAAS,GAAGH,OAAO,CAACI,UAAU;IACpC,MAAMC,QAAQ,GAAGL,OAAO,CAACM,WAAW;IACpC,MAAMC,cAAc,GAAGP,OAAO,CAACQ,OAAO;;IAEtC;IACA,IAAIC,IAAI,GAAG,MAAMrB,IAAI,CAACsB,OAAO,CAAC;MAAEC,KAAK,EAAE;QAAET;MAAM;IAAE,CAAC,CAAC;;IAEnD;IACA,IAAI,CAACO,IAAI,EAAE;MACP,MAAMG,KAAK,GAAG,IAAIC,KAAK,CAAC,yDAAyD,CAAC;MAClFD,KAAK,CAACE,UAAU,GAAG,GAAG;MACtB,MAAMF,KAAK;IACb;;IAEF;IACA,MAAMG,SAAS,GAAG1B,GAAG,CAAC2B,IAAI,CAAC;MAAEC,MAAM,EAAER,IAAI,CAACS,EAAE;MAAEC,IAAI,EAAEV,IAAI,CAACU;IAAK,CAAC,EAAE5B,OAAO,CAACC,GAAG,CAAC4B,UAAU,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAE7G,OAAO;MACLJ,MAAM,EAAER,IAAI,CAACS,EAAE;MACff,SAAS,EAAEM,IAAI,CAACN,SAAS;MACzBE,QAAQ,EAAEI,IAAI,CAACJ,QAAQ;MACvBH,KAAK,EAAEO,IAAI,CAACP,KAAK;MACjBK,cAAc,EAAEE,IAAI,CAACF,cAAc;MACnCZ,KAAK,EAAEoB;IACT,CAAC;EACH,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdU,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAG;EAAE9B;AAAY,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"119db490eec2bbe52d3f37b591ff24cd0568b24a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_8xupy7a1z=function(){return actualCoverage;};}return actualCoverage;}cov_8xupy7a1z();const{OAuth2Client}=(cov_8xupy7a1z().s[0]++,require('google-auth-library'));const{User}=(cov_8xupy7a1z().s[1]++,require('../../models'));// Adjust the path as needed
const jwt=(cov_8xupy7a1z().s[2]++,require('jsonwebtoken'));const client=(cov_8xupy7a1z().s[3]++,new OAuth2Client(process.env.GOOGLE_CLIENT_ID));cov_8xupy7a1z().s[4]++;const googleLogin=async token=>{cov_8xupy7a1z().f[0]++;cov_8xupy7a1z().s[5]++;try{// Verify Google token
const ticket=(cov_8xupy7a1z().s[6]++,await client.verifyIdToken({idToken:token,audience:process.env.GOOGLE_CLIENT_ID}));const payload=(cov_8xupy7a1z().s[7]++,ticket.getPayload());const email=(cov_8xupy7a1z().s[8]++,payload.email);// Use email to check if the user exists
const firstName=(cov_8xupy7a1z().s[9]++,payload.given_name);const lastName=(cov_8xupy7a1z().s[10]++,payload.family_name);const profilePicture=(cov_8xupy7a1z().s[11]++,payload.picture);// Check if the user exists in the database using email
let user=(cov_8xupy7a1z().s[12]++,await User.findOne({where:{email}}));// If the user does not exist, create a new user
cov_8xupy7a1z().s[13]++;if(!user){cov_8xupy7a1z().b[0][0]++;const error=(cov_8xupy7a1z().s[14]++,new Error('Account does not exist. Please create an account first.'));cov_8xupy7a1z().s[15]++;error.statusCode=404;cov_8xupy7a1z().s[16]++;throw error;}else{cov_8xupy7a1z().b[0][1]++;}// Generate JWT token
const authToken=(cov_8xupy7a1z().s[17]++,jwt.sign({userId:user.id,role:user.role},process.env.JWT_SECRET,{expiresIn:'1h'}));cov_8xupy7a1z().s[18]++;return{userId:user.id,firstName:user.firstName,lastName:user.lastName,email:user.email,profilePicture:user.profilePicture,token:authToken};}catch(error){cov_8xupy7a1z().s[19]++;console.error('Error in googleLogin:',error);cov_8xupy7a1z().s[20]++;throw error;}};cov_8xupy7a1z().s[21]++;module.exports={googleLogin};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPQXV0aDJDbGllbnQiLCJyZXF1aXJlIiwiVXNlciIsImp3dCIsImNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEIiwiZ29vZ2xlTG9naW4iLCJ0b2tlbiIsInRpY2tldCIsInZlcmlmeUlkVG9rZW4iLCJpZFRva2VuIiwiYXVkaWVuY2UiLCJwYXlsb2FkIiwiZ2V0UGF5bG9hZCIsImVtYWlsIiwiZmlyc3ROYW1lIiwiZ2l2ZW5fbmFtZSIsImxhc3ROYW1lIiwiZmFtaWx5X25hbWUiLCJwcm9maWxlUGljdHVyZSIsInBpY3R1cmUiLCJ1c2VyIiwiZmluZE9uZSIsIndoZXJlIiwiZXJyb3IiLCJFcnJvciIsInN0YXR1c0NvZGUiLCJhdXRoVG9rZW4iLCJzaWduIiwidXNlcklkIiwiaWQiLCJyb2xlIiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsImNvbnNvbGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxccmlwcGVyc1xccmlwcGVycy1ibi1iZVxcc3JjXFxTZXJ2aWNlc1xcIiwic291cmNlcyI6WyJhdXRoU2VydmljZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE9BdXRoMkNsaWVudCB9ID0gcmVxdWlyZSgnZ29vZ2xlLWF1dGgtbGlicmFyeScpO1xyXG5jb25zdCB7IFVzZXIgfSA9IHJlcXVpcmUoJy4uLy4uL21vZGVscycpOyAvLyBBZGp1c3QgdGhlIHBhdGggYXMgbmVlZGVkXHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5cclxuY29uc3QgY2xpZW50ID0gbmV3IE9BdXRoMkNsaWVudChwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEKTtcclxuXHJcbmNvbnN0IGdvb2dsZUxvZ2luID0gYXN5bmMgKHRva2VuKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFZlcmlmeSBHb29nbGUgdG9rZW5cclxuICAgIGNvbnN0IHRpY2tldCA9IGF3YWl0IGNsaWVudC52ZXJpZnlJZFRva2VuKHtcclxuICAgICAgaWRUb2tlbjogdG9rZW4sXHJcbiAgICAgIGF1ZGllbmNlOiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lELFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgcGF5bG9hZCA9IHRpY2tldC5nZXRQYXlsb2FkKCk7XHJcbiAgICBjb25zdCBlbWFpbCA9IHBheWxvYWQuZW1haWw7IC8vIFVzZSBlbWFpbCB0byBjaGVjayBpZiB0aGUgdXNlciBleGlzdHNcclxuICAgIGNvbnN0IGZpcnN0TmFtZSA9IHBheWxvYWQuZ2l2ZW5fbmFtZTtcclxuICAgIGNvbnN0IGxhc3ROYW1lID0gcGF5bG9hZC5mYW1pbHlfbmFtZTtcclxuICAgIGNvbnN0IHByb2ZpbGVQaWN0dXJlID0gcGF5bG9hZC5waWN0dXJlO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHRoZSB1c2VyIGV4aXN0cyBpbiB0aGUgZGF0YWJhc2UgdXNpbmcgZW1haWxcclxuICAgIGxldCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgd2hlcmU6IHsgZW1haWwgfSB9KTtcclxuXHJcbiAgICAvLyBJZiB0aGUgdXNlciBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGEgbmV3IHVzZXJcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKCdBY2NvdW50IGRvZXMgbm90IGV4aXN0LiBQbGVhc2UgY3JlYXRlIGFuIGFjY291bnQgZmlyc3QuJyk7XHJcbiAgICAgICAgZXJyb3Iuc3RhdHVzQ29kZSA9IDQwNDtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG5cclxuICAgIC8vIEdlbmVyYXRlIEpXVCB0b2tlblxyXG4gICAgY29uc3QgYXV0aFRva2VuID0gand0LnNpZ24oeyB1c2VySWQ6IHVzZXIuaWQsIHJvbGU6IHVzZXIucm9sZSB9LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVULCB7IGV4cGlyZXNJbjogJzFoJyB9KTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB1c2VySWQ6IHVzZXIuaWQsXHJcbiAgICAgIGZpcnN0TmFtZTogdXNlci5maXJzdE5hbWUsXHJcbiAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3ROYW1lLFxyXG4gICAgICBlbWFpbDogdXNlci5lbWFpbCxcclxuICAgICAgcHJvZmlsZVBpY3R1cmU6IHVzZXIucHJvZmlsZVBpY3R1cmUsXHJcbiAgICAgIHRva2VuOiBhdXRoVG9rZW4sXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnb29nbGVMb2dpbjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ29vZ2xlTG9naW4gfTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBYSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUN2RCxNQUFNO0VBQUVDO0FBQUssQ0FBQyxHQUFHRCxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztBQUMxQyxNQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFFbkMsTUFBTUcsTUFBTSxHQUFHLElBQUlKLFlBQVksQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGdCQUFnQixDQUFDO0FBRTdELE1BQU1DLFdBQVcsR0FBRyxNQUFPQyxLQUFLLElBQUs7RUFDbkMsSUFBSTtJQUNGO0lBQ0EsTUFBTUMsTUFBTSxHQUFHLE1BQU1OLE1BQU0sQ0FBQ08sYUFBYSxDQUFDO01BQ3hDQyxPQUFPLEVBQUVILEtBQUs7TUFDZEksUUFBUSxFQUFFUixPQUFPLENBQUNDLEdBQUcsQ0FBQ0M7SUFDeEIsQ0FBQyxDQUFDO0lBRUYsTUFBTU8sT0FBTyxHQUFHSixNQUFNLENBQUNLLFVBQVUsQ0FBQyxDQUFDO0lBQ25DLE1BQU1DLEtBQUssR0FBR0YsT0FBTyxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUM3QixNQUFNQyxTQUFTLEdBQUdILE9BQU8sQ0FBQ0ksVUFBVTtJQUNwQyxNQUFNQyxRQUFRLEdBQUdMLE9BQU8sQ0FBQ00sV0FBVztJQUNwQyxNQUFNQyxjQUFjLEdBQUdQLE9BQU8sQ0FBQ1EsT0FBTzs7SUFFdEM7SUFDQSxJQUFJQyxJQUFJLEdBQUcsTUFBTXJCLElBQUksQ0FBQ3NCLE9BQU8sQ0FBQztNQUFFQyxLQUFLLEVBQUU7UUFBRVQ7TUFBTTtJQUFFLENBQUMsQ0FBQzs7SUFFbkQ7SUFDQSxJQUFJLENBQUNPLElBQUksRUFBRTtNQUNQLE1BQU1HLEtBQUssR0FBRyxJQUFJQyxLQUFLLENBQUMseURBQXlELENBQUM7TUFDbEZELEtBQUssQ0FBQ0UsVUFBVSxHQUFHLEdBQUc7TUFDdEIsTUFBTUYsS0FBSztJQUNiOztJQUVGO0lBQ0EsTUFBTUcsU0FBUyxHQUFHMUIsR0FBRyxDQUFDMkIsSUFBSSxDQUFDO01BQUVDLE1BQU0sRUFBRVIsSUFBSSxDQUFDUyxFQUFFO01BQUVDLElBQUksRUFBRVYsSUFBSSxDQUFDVTtJQUFLLENBQUMsRUFBRTVCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDNEIsVUFBVSxFQUFFO01BQUVDLFNBQVMsRUFBRTtJQUFLLENBQUMsQ0FBQztJQUU3RyxPQUFPO01BQ0xKLE1BQU0sRUFBRVIsSUFBSSxDQUFDUyxFQUFFO01BQ2ZmLFNBQVMsRUFBRU0sSUFBSSxDQUFDTixTQUFTO01BQ3pCRSxRQUFRLEVBQUVJLElBQUksQ0FBQ0osUUFBUTtNQUN2QkgsS0FBSyxFQUFFTyxJQUFJLENBQUNQLEtBQUs7TUFDakJLLGNBQWMsRUFBRUUsSUFBSSxDQUFDRixjQUFjO01BQ25DWixLQUFLLEVBQUVvQjtJQUNULENBQUM7RUFDSCxDQUFDLENBQUMsT0FBT0gsS0FBSyxFQUFFO0lBQ2RVLE9BQU8sQ0FBQ1YsS0FBSyxDQUFDLHVCQUF1QixFQUFFQSxLQUFLLENBQUM7SUFDN0MsTUFBTUEsS0FBSztFQUNiO0FBQ0YsQ0FBQztBQUVEVyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUFFOUI7QUFBWSxDQUFDIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfOHh1cHk3YTF6IiwiYWN0dWFsQ292ZXJhZ2UiLCJPQXV0aDJDbGllbnQiLCJzIiwicmVxdWlyZSIsIlVzZXIiLCJqd3QiLCJjbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiR09PR0xFX0NMSUVOVF9JRCIsImdvb2dsZUxvZ2luIiwidG9rZW4iLCJmIiwidGlja2V0IiwidmVyaWZ5SWRUb2tlbiIsImlkVG9rZW4iLCJhdWRpZW5jZSIsInBheWxvYWQiLCJnZXRQYXlsb2FkIiwiZW1haWwiLCJmaXJzdE5hbWUiLCJnaXZlbl9uYW1lIiwibGFzdE5hbWUiLCJmYW1pbHlfbmFtZSIsInByb2ZpbGVQaWN0dXJlIiwicGljdHVyZSIsInVzZXIiLCJmaW5kT25lIiwid2hlcmUiLCJiIiwiZXJyb3IiLCJFcnJvciIsInN0YXR1c0NvZGUiLCJhdXRoVG9rZW4iLCJzaWduIiwidXNlcklkIiwiaWQiLCJyb2xlIiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsImNvbnNvbGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRDpcXHJpcHBlcnNcXHJpcHBlcnMtYm4tYmVcXHNyY1xcU2VydmljZXNcXC9hdXRoU2VydmljZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE9BdXRoMkNsaWVudCB9ID0gcmVxdWlyZSgnZ29vZ2xlLWF1dGgtbGlicmFyeScpO1xyXG5jb25zdCB7IFVzZXIgfSA9IHJlcXVpcmUoJy4uLy4uL21vZGVscycpOyAvLyBBZGp1c3QgdGhlIHBhdGggYXMgbmVlZGVkXHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5cclxuY29uc3QgY2xpZW50ID0gbmV3IE9BdXRoMkNsaWVudChwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEKTtcclxuXHJcbmNvbnN0IGdvb2dsZUxvZ2luID0gYXN5bmMgKHRva2VuKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFZlcmlmeSBHb29nbGUgdG9rZW5cclxuICAgIGNvbnN0IHRpY2tldCA9IGF3YWl0IGNsaWVudC52ZXJpZnlJZFRva2VuKHtcclxuICAgICAgaWRUb2tlbjogdG9rZW4sXHJcbiAgICAgIGF1ZGllbmNlOiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lELFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgcGF5bG9hZCA9IHRpY2tldC5nZXRQYXlsb2FkKCk7XHJcbiAgICBjb25zdCBlbWFpbCA9IHBheWxvYWQuZW1haWw7IC8vIFVzZSBlbWFpbCB0byBjaGVjayBpZiB0aGUgdXNlciBleGlzdHNcclxuICAgIGNvbnN0IGZpcnN0TmFtZSA9IHBheWxvYWQuZ2l2ZW5fbmFtZTtcclxuICAgIGNvbnN0IGxhc3ROYW1lID0gcGF5bG9hZC5mYW1pbHlfbmFtZTtcclxuICAgIGNvbnN0IHByb2ZpbGVQaWN0dXJlID0gcGF5bG9hZC5waWN0dXJlO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHRoZSB1c2VyIGV4aXN0cyBpbiB0aGUgZGF0YWJhc2UgdXNpbmcgZW1haWxcclxuICAgIGxldCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgd2hlcmU6IHsgZW1haWwgfSB9KTtcclxuXHJcbiAgICAvLyBJZiB0aGUgdXNlciBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGEgbmV3IHVzZXJcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKCdBY2NvdW50IGRvZXMgbm90IGV4aXN0LiBQbGVhc2UgY3JlYXRlIGFuIGFjY291bnQgZmlyc3QuJyk7XHJcbiAgICAgICAgZXJyb3Iuc3RhdHVzQ29kZSA9IDQwNDtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG5cclxuICAgIC8vIEdlbmVyYXRlIEpXVCB0b2tlblxyXG4gICAgY29uc3QgYXV0aFRva2VuID0gand0LnNpZ24oeyB1c2VySWQ6IHVzZXIuaWQsIHJvbGU6IHVzZXIucm9sZSB9LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVULCB7IGV4cGlyZXNJbjogJzFoJyB9KTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB1c2VySWQ6IHVzZXIuaWQsXHJcbiAgICAgIGZpcnN0TmFtZTogdXNlci5maXJzdE5hbWUsXHJcbiAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3ROYW1lLFxyXG4gICAgICBlbWFpbDogdXNlci5lbWFpbCxcclxuICAgICAgcHJvZmlsZVBpY3R1cmU6IHVzZXIucHJvZmlsZVBpY3R1cmUsXHJcbiAgICAgIHRva2VuOiBhdXRoVG9rZW4sXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnb29nbGVMb2dpbjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ29vZ2xlTG9naW4gfTsiXSwibWFwcGluZ3MiOiIweUxBY1U7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZFYsS0FBTSxDQUFFRSxZQUFhLENBQUMsRUFBQUYsYUFBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxFQUN2RCxLQUFNLENBQUVDLElBQUssQ0FBQyxFQUFBTCxhQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFO0FBQzFDLEtBQU0sQ0FBQUUsR0FBRyxFQUFBTixhQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUVuQyxLQUFNLENBQUFHLE1BQU0sRUFBQVAsYUFBQSxHQUFBRyxDQUFBLE1BQUcsR0FBSSxDQUFBRCxZQUFZLENBQUNNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxnQkFBZ0IsQ0FBQyxFQUFBVixhQUFBLEdBQUFHLENBQUEsTUFFN0QsS0FBTSxDQUFBUSxXQUFXLENBQUcsS0FBTyxDQUFBQyxLQUFLLEVBQUssQ0FBQVosYUFBQSxHQUFBYSxDQUFBLE1BQUFiLGFB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