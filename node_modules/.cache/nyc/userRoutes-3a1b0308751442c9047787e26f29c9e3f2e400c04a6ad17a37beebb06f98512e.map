{"version":3,"names":["express","require","userRegistrationController","userLoginController","router","Router","post","module","exports"],"sourceRoot":"N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\src\\routes\\","sources":["userRoutes.js"],"sourcesContent":["const express = require('express');\r\nconst { userRegistrationController } = require('../controllers/UserController/userController');\r\nconst { userLoginController } = require('../controllers/UserController/LoginController');\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/auth/register', userRegistrationController);\r\n/**\r\n * @openapi\r\n * /api/auth/login:\r\n *   post:\r\n *     tags:\r\n *       - Users\r\n *     description: Login a user and return a JWT token\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *                 format: email\r\n *                 example: user@example.com\r\n *               password:\r\n *                 type: string\r\n *                 format: password\r\n *                 example: mysecurepassword\r\n *             required:\r\n *               - email\r\n *               - password\r\n *     responses:\r\n *       '201':\r\n *         description: Login successful\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   example: Login successful\r\n *                 token:\r\n *                   type: string\r\n *                   example: eyJhbGciOiJIUzI1NiIsIn...\r\n *       '401':\r\n *         description: Authentication failed - Invalid credentials\r\n *       '500':\r\n *         description: Internal server error\r\n */\r\nrouter.post('/auth/login', userLoginController);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC;AAA2B,CAAC,GAAGD,OAAO,CAAC,8CAA8C,CAAC;AAC9F,MAAM;EAAEE;AAAoB,CAAC,GAAGF,OAAO,CAAC,+CAA+C,CAAC;AAExF,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,IAAI,CAAC,gBAAgB,EAAEJ,0BAA0B,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACE,IAAI,CAAC,aAAa,EAAEH,mBAAmB,CAAC;AAE/CI,MAAM,CAACC,OAAO,GAAGJ,MAAM","ignoreList":[]}