function cov_xgyfu6jdx(){var path="M:\\Production\\eric-nomad\\src\\server.js";var hash="e9e80b33b7ceec7cf8b876a068088199abf791fc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"M:\\Production\\eric-nomad\\src\\server.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:16},end:{line:2,column:34}},"2":{start:{line:3,column:19},end:{line:3,column:41}},"3":{start:{line:4,column:18},end:{line:4,column:47}},"4":{start:{line:5,column:24},end:{line:5,column:50}},"5":{start:{line:6,column:19},end:{line:6,column:49}},"6":{start:{line:8,column:0},end:{line:8,column:16}},"7":{start:{line:9,column:12},end:{line:9,column:21}},"8":{start:{line:10,column:13},end:{line:10,column:37}},"9":{start:{line:11,column:0},end:{line:11,column:27}},"10":{start:{line:14,column:0},end:{line:14,column:31}},"11":{start:{line:15,column:0},end:{line:15,column:72}},"12":{start:{line:18,column:0},end:{line:20,column:3}},"13":{start:{line:19,column:2},end:{line:19,column:48}},"14":{start:{line:21,column:0},end:{line:21,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:17},end:{line:18,column:18}},loc:{start:{line:18,column:23},end:{line:20,column:1}},line:18}},branchMap:{"0":{loc:{start:{line:10,column:13},end:{line:10,column:37}},type:"binary-expr",locations:[{start:{line:10,column:13},end:{line:10,column:29}},{start:{line:10,column:33},end:{line:10,column:37}}],line:10}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["dotenv","require","express","bodyParser","swaggerUi","swaggerDocument","userRoutes","config","app","PORT","process","env","use","json","serve","setup","listen","console","log","module","exports"],sourceRoot:"M:\\Production\\eric-nomad\\src\\",sources:["server.js"],sourcesContent:["const dotenv = require('dotenv');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser'); // Import body-parser for JSON parsing\r\nconst swaggerUi = require('swagger-ui-express');\r\nconst swaggerDocument = require('../swagger.json'); // Assuming your swagger.json is located at this path\r\nconst userRoutes = require('./routes/userRoutes'); // Import user routes\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\napp.use(bodyParser.json());\r\n\r\n// Set up user routes\r\napp.use('/api/v1', userRoutes); \r\n\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n\r\nmodule.exports = app;\r\n"],mappings:"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3C,MAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMI,eAAe,GAAGJ,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpD,MAAMK,UAAU,GAAGL,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;;AAEnDD,MAAM,CAACO,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrB,MAAMO,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCD,GAAG,CAACI,GAAG,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAL,GAAG,CAACI,GAAG,CAAC,SAAS,EAAEN,UAAU,CAAC;AAE9BE,GAAG,CAACI,GAAG,CAAC,WAAW,EAAER,SAAS,CAACU,KAAK,EAAEV,SAAS,CAACW,KAAK,CAACV,eAAe,CAAC,CAAC;;AAEvE;AACAG,GAAG,CAACQ,MAAM,CAACP,IAAI,EAAE,MAAM;EACrBQ,OAAO,CAACC,GAAG,CAAC,0BAA0BT,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC;AAEFU,MAAM,CAACC,OAAO,GAAGZ,GAAG",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e9e80b33b7ceec7cf8b876a068088199abf791fc"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_xgyfu6jdx=function(){return actualCoverage;};}return actualCoverage;}cov_xgyfu6jdx();const dotenv=(cov_xgyfu6jdx().s[0]++,require('dotenv'));const express=(cov_xgyfu6jdx().s[1]++,require('express'));const bodyParser=(cov_xgyfu6jdx().s[2]++,require('body-parser'));// Import body-parser for JSON parsing
const swaggerUi=(cov_xgyfu6jdx().s[3]++,require('swagger-ui-express'));const swaggerDocument=(cov_xgyfu6jdx().s[4]++,require('../swagger.json'));// Assuming your swagger.json is located at this path
const userRoutes=(cov_xgyfu6jdx().s[5]++,require('./routes/userRoutes'));// Import user routes
cov_xgyfu6jdx().s[6]++;dotenv.config();const app=(cov_xgyfu6jdx().s[7]++,express());const PORT=(cov_xgyfu6jdx().s[8]++,(cov_xgyfu6jdx().b[0][0]++,process.env.PORT)||(cov_xgyfu6jdx().b[0][1]++,3000));cov_xgyfu6jdx().s[9]++;app.use(bodyParser.json());// Set up user routes
cov_xgyfu6jdx().s[10]++;app.use('/api/v1',userRoutes);cov_xgyfu6jdx().s[11]++;app.use('/api-docs',swaggerUi.serve,swaggerUi.setup(swaggerDocument));// Start the server
cov_xgyfu6jdx().s[12]++;app.listen(PORT,()=>{cov_xgyfu6jdx().f[0]++;cov_xgyfu6jdx().s[13]++;console.log(`Server running on port ${PORT}`);});cov_xgyfu6jdx().s[14]++;module.exports=app;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJzd2FnZ2VyVWkiLCJzd2FnZ2VyRG9jdW1lbnQiLCJ1c2VyUm91dGVzIiwiY29uZmlnIiwiYXBwIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJqc29uIiwic2VydmUiLCJzZXR1cCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJNOlxcUHJvZHVjdGlvblxcZXJpYy1ub21hZFxcc3JjXFwiLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IC8vIEltcG9ydCBib2R5LXBhcnNlciBmb3IgSlNPTiBwYXJzaW5nXHJcbmNvbnN0IHN3YWdnZXJVaSA9IHJlcXVpcmUoJ3N3YWdnZXItdWktZXhwcmVzcycpO1xyXG5jb25zdCBzd2FnZ2VyRG9jdW1lbnQgPSByZXF1aXJlKCcuLi9zd2FnZ2VyLmpzb24nKTsgLy8gQXNzdW1pbmcgeW91ciBzd2FnZ2VyLmpzb24gaXMgbG9jYXRlZCBhdCB0aGlzIHBhdGhcclxuY29uc3QgdXNlclJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3VzZXJSb3V0ZXMnKTsgLy8gSW1wb3J0IHVzZXIgcm91dGVzXHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbi8vIFNldCB1cCB1c2VyIHJvdXRlc1xyXG5hcHAudXNlKCcvYXBpL3YxJywgdXNlclJvdXRlcyk7IFxyXG5cclxuYXBwLnVzZSgnL2FwaS1kb2NzJywgc3dhZ2dlclVpLnNlcnZlLCBzd2FnZ2VyVWkuc2V0dXAoc3dhZ2dlckRvY3VtZW50KSk7XHJcblxyXG4vLyBTdGFydCB0aGUgc2VydmVyXHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBwb3J0ICR7UE9SVH1gKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDaEMsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFDM0MsTUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDL0MsTUFBTUksZUFBZSxHQUFHSixPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0FBQ3BELE1BQU1LLFVBQVUsR0FBR0wsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQzs7QUFFbkRELE1BQU0sQ0FBQ08sTUFBTSxDQUFDLENBQUM7QUFFZixNQUFNQyxHQUFHLEdBQUdOLE9BQU8sQ0FBQyxDQUFDO0FBQ3JCLE1BQU1PLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNGLElBQUksSUFBSSxJQUFJO0FBRXJDRCxHQUFHLENBQUNJLEdBQUcsQ0FBQ1QsVUFBVSxDQUFDVSxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUUxQjtBQUNBTCxHQUFHLENBQUNJLEdBQUcsQ0FBQyxTQUFTLEVBQUVOLFVBQVUsQ0FBQztBQUU5QkUsR0FBRyxDQUFDSSxHQUFHLENBQUMsV0FBVyxFQUFFUixTQUFTLENBQUNVLEtBQUssRUFBRVYsU0FBUyxDQUFDVyxLQUFLLENBQUNWLGVBQWUsQ0FBQyxDQUFDOztBQUV2RTtBQUNBRyxHQUFHLENBQUNRLE1BQU0sQ0FBQ1AsSUFBSSxFQUFFLE1BQU07RUFDckJRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDBCQUEwQlQsSUFBSSxFQUFFLENBQUM7QUFDL0MsQ0FBQyxDQUFDO0FBRUZVLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWixHQUFHIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJjb3ZfeGd5ZnU2amR4IiwicyIsInJlcXVpcmUiLCJleHByZXNzIiwiYm9keVBhcnNlciIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2N1bWVudCIsInVzZXJSb3V0ZXMiLCJjb25maWciLCJhcHAiLCJQT1JUIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJqc29uIiwic2VydmUiLCJzZXR1cCIsImxpc3RlbiIsImYiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk06XFxQcm9kdWN0aW9uXFxlcmljLW5vbWFkXFxzcmNcXC9zZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpOyAvLyBJbXBvcnQgYm9keS1wYXJzZXIgZm9yIEpTT04gcGFyc2luZ1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKTtcclxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi4vc3dhZ2dlci5qc29uJyk7IC8vIEFzc3VtaW5nIHlvdXIgc3dhZ2dlci5qc29uIGlzIGxvY2F0ZWQgYXQgdGhpcyBwYXRoXHJcbmNvbnN0IHVzZXJSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyUm91dGVzJyk7IC8vIEltcG9ydCB1c2VyIHJvdXRlc1xyXG5cclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG4vLyBTZXQgdXAgdXNlciByb3V0ZXNcclxuYXBwLnVzZSgnL2FwaS92MScsIHVzZXJSb3V0ZXMpOyBcclxuXHJcbmFwcC51c2UoJy9hcGktZG9jcycsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2N1bWVudCkpO1xyXG5cclxuLy8gU3RhcnQgdGhlIHNlcnZlclxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XHJcbiJdLCJtYXBwaW5ncyI6Ijt5RkFBQSxLQUFNLENBQUFBLE1BQU0sRUFBQUMsYUFBQSxHQUFBQyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEMsS0FBTSxDQUFBQyxPQUFPLEVBQUFILGFBQUEsR0FBQUMsQ0FBQSxNQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQ2xDLEtBQU0sQ0FBQUUsVUFBVSxFQUFBSixhQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO0FBQzNDLEtBQU0sQ0FBQUcsU0FBUyxFQUFBTCxhQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLG9CQUFvQixDQUFDLEVBQy9DLEtBQU0sQ0FBQUksZUFBZSxFQUFBTixhQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEVBQUU7QUFDcEQsS0FBTSxDQUFBSyxVQUFVLEVBQUFQLGFBQUEsR0FBQUMsQ0FBQSxNQUFHQyxPQUFPLENBQUMscUJBQXFCLENBQUMsRUFBRTtBQUFBRixhQUFBLEdBQUFDLENBQUEsTUFFbkRGLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDLENBQUMsQ0FFZixLQUFNLENBQUFDLEdBQUcsRUFBQVQsYUFBQSxHQUFBQyxDQUFBLE1BQUdFLE9BQU8sQ0FBQyxDQUFDLEVBQ3JCLEtBQU0sQ0FBQU8sSUFBSSxFQUFBVixhQUFBLEdBQUFDLENBQUEsTUFBRyxDQUFBRCxhQUFBLEdBQUFXLENBQUEsU0FBQUMsT0FBTyxDQUFDQyxHQUFHLENBQUNILElBQUksSUFBQVYsYUFBQSxHQUFBVyxDQUFBLFNBQUksSUFBSSxHQUFBWCxhQUFBLEdBQUFDLENBQUEsTUFFckNRLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDVixVQUFVLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FFMUI7QUFBQWYsYUFBQSxHQUFBQyxDQUFBLE9BQ0FRLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDLFNBQVMsQ0FBRVAsVUFBVSxDQUFDLENBQUFQLGFBQUEsR0FBQUMsQ0FBQSxPQUU5QlEsR0FBRyxDQUFDSyxHQUFHLENBQUMsV0FBVyxDQUFFVCxTQUFTLENBQUNXLEtBQUssQ0FBRVgsU0FBUyxDQUFDWSxLQUFLLENBQUNYLGVBQWUsQ0FBQyxDQUFDLENBRXZFO0FBQUFOLGFBQUEsR0FBQUMsQ0FBQSxPQUNBUSxHQUFHLENBQUNTLE1BQU0sQ0FBQ1IsSUFBSSxDQUFFLElBQU0sQ0FBQVYsYUFBQSxHQUFBbUIsQ0FBQSxNQUFBbkIsYUFBQSxHQUFBQyxDQUFBLE9BQ3JCbUIsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCWCxJQUFJLEVBQUUsQ0FBQyxDQUMvQyxDQUFDLENBQUMsQ0FBQVYsYUFBQSxHQUFBQyxDQUFBLE9BRUZxQixNQUFNLENBQUNDLE9BQU8sQ0FBR2QsR0FBRyxDIiwiaWdub3JlTGlzdCI6W119