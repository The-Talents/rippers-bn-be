function cov_ribzlo3c(){var path="N:\\Personal Projects\\work-projects\\eric-nomad\\src\\server.js";var hash="1dd2a0438db6e0b7c27b03e7a952f4e2ccbf92e4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"N:\\Personal Projects\\work-projects\\eric-nomad\\src\\server.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:16},end:{line:2,column:34}},"2":{start:{line:3,column:19},end:{line:3,column:41}},"3":{start:{line:4,column:18},end:{line:4,column:47}},"4":{start:{line:5,column:24},end:{line:5,column:50}},"5":{start:{line:6,column:19},end:{line:6,column:49}},"6":{start:{line:8,column:0},end:{line:8,column:16}},"7":{start:{line:9,column:12},end:{line:9,column:21}},"8":{start:{line:10,column:13},end:{line:10,column:37}},"9":{start:{line:11,column:0},end:{line:11,column:27}},"10":{start:{line:14,column:0},end:{line:14,column:31}},"11":{start:{line:15,column:0},end:{line:15,column:72}},"12":{start:{line:18,column:0},end:{line:20,column:3}},"13":{start:{line:19,column:2},end:{line:19,column:48}},"14":{start:{line:21,column:0},end:{line:21,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:17},end:{line:18,column:18}},loc:{start:{line:18,column:23},end:{line:20,column:1}},line:18}},branchMap:{"0":{loc:{start:{line:10,column:13},end:{line:10,column:37}},type:"binary-expr",locations:[{start:{line:10,column:13},end:{line:10,column:29}},{start:{line:10,column:33},end:{line:10,column:37}}],line:10}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["dotenv","require","express","bodyParser","swaggerUi","swaggerDocument","userRoutes","config","app","PORT","process","env","use","json","serve","setup","listen","console","log","module","exports"],sourceRoot:"N:\\Personal Projects\\work-projects\\eric-nomad\\src\\",sources:["server.js"],sourcesContent:["const dotenv = require('dotenv');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser'); // Import body-parser for JSON parsing\r\nconst swaggerUi = require('swagger-ui-express');\r\nconst swaggerDocument = require('../swagger.json'); // Assuming your swagger.json is located at this path\r\nconst userRoutes = require('./routes/userRoutes'); // Import user routes\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\napp.use(bodyParser.json());\r\n\r\n// Set up user routes\r\napp.use('/api/v1', userRoutes); \r\n\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n\r\nmodule.exports = app;\r\n"],mappings:"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3C,MAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMI,eAAe,GAAGJ,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpD,MAAMK,UAAU,GAAGL,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;;AAEnDD,MAAM,CAACO,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrB,MAAMO,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCD,GAAG,CAACI,GAAG,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAL,GAAG,CAACI,GAAG,CAAC,SAAS,EAAEN,UAAU,CAAC;AAE9BE,GAAG,CAACI,GAAG,CAAC,WAAW,EAAER,SAAS,CAACU,KAAK,EAAEV,SAAS,CAACW,KAAK,CAACV,eAAe,CAAC,CAAC;;AAEvE;AACAG,GAAG,CAACQ,MAAM,CAACP,IAAI,EAAE,MAAM;EACrBQ,OAAO,CAACC,GAAG,CAAC,0BAA0BT,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC;AAEFU,MAAM,CAACC,OAAO,GAAGZ,GAAG",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1dd2a0438db6e0b7c27b03e7a952f4e2ccbf92e4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ribzlo3c=function(){return actualCoverage;};}return actualCoverage;}cov_ribzlo3c();const dotenv=(cov_ribzlo3c().s[0]++,require('dotenv'));const express=(cov_ribzlo3c().s[1]++,require('express'));const bodyParser=(cov_ribzlo3c().s[2]++,require('body-parser'));// Import body-parser for JSON parsing
const swaggerUi=(cov_ribzlo3c().s[3]++,require('swagger-ui-express'));const swaggerDocument=(cov_ribzlo3c().s[4]++,require('../swagger.json'));// Assuming your swagger.json is located at this path
const userRoutes=(cov_ribzlo3c().s[5]++,require('./routes/userRoutes'));// Import user routes
cov_ribzlo3c().s[6]++;dotenv.config();const app=(cov_ribzlo3c().s[7]++,express());const PORT=(cov_ribzlo3c().s[8]++,(cov_ribzlo3c().b[0][0]++,process.env.PORT)||(cov_ribzlo3c().b[0][1]++,3000));cov_ribzlo3c().s[9]++;app.use(bodyParser.json());// Set up user routes
cov_ribzlo3c().s[10]++;app.use('/api/v1',userRoutes);cov_ribzlo3c().s[11]++;app.use('/api-docs',swaggerUi.serve,swaggerUi.setup(swaggerDocument));// Start the server
cov_ribzlo3c().s[12]++;app.listen(PORT,()=>{cov_ribzlo3c().f[0]++;cov_ribzlo3c().s[13]++;console.log(`Server running on port ${PORT}`);});cov_ribzlo3c().s[14]++;module.exports=app;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJzd2FnZ2VyVWkiLCJzd2FnZ2VyRG9jdW1lbnQiLCJ1c2VyUm91dGVzIiwiY29uZmlnIiwiYXBwIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJqc29uIiwic2VydmUiLCJzZXR1cCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJOOlxcUGVyc29uYWwgUHJvamVjdHNcXHdvcmstcHJvamVjdHNcXGVyaWMtbm9tYWRcXHNyY1xcIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpOyAvLyBJbXBvcnQgYm9keS1wYXJzZXIgZm9yIEpTT04gcGFyc2luZ1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKTtcclxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi4vc3dhZ2dlci5qc29uJyk7IC8vIEFzc3VtaW5nIHlvdXIgc3dhZ2dlci5qc29uIGlzIGxvY2F0ZWQgYXQgdGhpcyBwYXRoXHJcbmNvbnN0IHVzZXJSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyUm91dGVzJyk7IC8vIEltcG9ydCB1c2VyIHJvdXRlc1xyXG5cclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG4vLyBTZXQgdXAgdXNlciByb3V0ZXNcclxuYXBwLnVzZSgnL2FwaS92MScsIHVzZXJSb3V0ZXMpOyBcclxuXHJcbmFwcC51c2UoJy9hcGktZG9jcycsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2N1bWVudCkpO1xyXG5cclxuLy8gU3RhcnQgdGhlIHNlcnZlclxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0FBQzNDLE1BQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0FBQy9DLE1BQU1JLGVBQWUsR0FBR0osT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztBQUNwRCxNQUFNSyxVQUFVLEdBQUdMLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7O0FBRW5ERCxNQUFNLENBQUNPLE1BQU0sQ0FBQyxDQUFDO0FBRWYsTUFBTUMsR0FBRyxHQUFHTixPQUFPLENBQUMsQ0FBQztBQUNyQixNQUFNTyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixJQUFJLElBQUksSUFBSTtBQUVyQ0QsR0FBRyxDQUFDSSxHQUFHLENBQUNULFVBQVUsQ0FBQ1UsSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFMUI7QUFDQUwsR0FBRyxDQUFDSSxHQUFHLENBQUMsU0FBUyxFQUFFTixVQUFVLENBQUM7QUFFOUJFLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLFdBQVcsRUFBRVIsU0FBUyxDQUFDVSxLQUFLLEVBQUVWLFNBQVMsQ0FBQ1csS0FBSyxDQUFDVixlQUFlLENBQUMsQ0FBQzs7QUFFdkU7QUFDQUcsR0FBRyxDQUFDUSxNQUFNLENBQUNQLElBQUksRUFBRSxNQUFNO0VBQ3JCUSxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEJULElBQUksRUFBRSxDQUFDO0FBQy9DLENBQUMsQ0FBQztBQUVGVSxNQUFNLENBQUNDLE9BQU8sR0FBR1osR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJjb3ZfcmliemxvM2MiLCJzIiwicmVxdWlyZSIsImV4cHJlc3MiLCJib2R5UGFyc2VyIiwic3dhZ2dlclVpIiwic3dhZ2dlckRvY3VtZW50IiwidXNlclJvdXRlcyIsImNvbmZpZyIsImFwcCIsIlBPUlQiLCJiIiwicHJvY2VzcyIsImVudiIsInVzZSIsImpzb24iLCJzZXJ2ZSIsInNldHVwIiwibGlzdGVuIiwiZiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTjpcXFBlcnNvbmFsIFByb2plY3RzXFx3b3JrLXByb2plY3RzXFxlcmljLW5vbWFkXFxzcmNcXC9zZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpOyAvLyBJbXBvcnQgYm9keS1wYXJzZXIgZm9yIEpTT04gcGFyc2luZ1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKTtcclxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi4vc3dhZ2dlci5qc29uJyk7IC8vIEFzc3VtaW5nIHlvdXIgc3dhZ2dlci5qc29uIGlzIGxvY2F0ZWQgYXQgdGhpcyBwYXRoXHJcbmNvbnN0IHVzZXJSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyUm91dGVzJyk7IC8vIEltcG9ydCB1c2VyIHJvdXRlc1xyXG5cclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG4vLyBTZXQgdXAgdXNlciByb3V0ZXNcclxuYXBwLnVzZSgnL2FwaS92MScsIHVzZXJSb3V0ZXMpOyBcclxuXHJcbmFwcC51c2UoJy9hcGktZG9jcycsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2N1bWVudCkpO1xyXG5cclxuLy8gU3RhcnQgdGhlIHNlcnZlclxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XHJcbiJdLCJtYXBwaW5ncyI6Ijt1RkFBQSxLQUFNLENBQUFBLE1BQU0sRUFBQUMsWUFBQSxHQUFBQyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEMsS0FBTSxDQUFBQyxPQUFPLEVBQUFILFlBQUEsR0FBQUMsQ0FBQSxNQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQ2xDLEtBQU0sQ0FBQUUsVUFBVSxFQUFBSixZQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO0FBQzNDLEtBQU0sQ0FBQUcsU0FBUyxFQUFBTCxZQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLG9CQUFvQixDQUFDLEVBQy9DLEtBQU0sQ0FBQUksZUFBZSxFQUFBTixZQUFBLEdBQUFDLENBQUEsTUFBR0MsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEVBQUU7QUFDcEQsS0FBTSxDQUFBSyxVQUFVLEVBQUFQLFlBQUEsR0FBQUMsQ0FBQSxNQUFHQyxPQUFPLENBQUMscUJBQXFCLENBQUMsRUFBRTtBQUFBRixZQUFBLEdBQUFDLENBQUEsTUFFbkRGLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDLENBQUMsQ0FFZixLQUFNLENBQUFDLEdBQUcsRUFBQVQsWUFBQSxHQUFBQyxDQUFBLE1BQUdFLE9BQU8sQ0FBQyxDQUFDLEVBQ3JCLEtBQU0sQ0FBQU8sSUFBSSxFQUFBVixZQUFBLEdBQUFDLENBQUEsTUFBRyxDQUFBRCxZQUFBLEdBQUFXLENBQUEsU0FBQUMsT0FBTyxDQUFDQyxHQUFHLENBQUNILElBQUksSUFBQVYsWUFBQSxHQUFBVyxDQUFBLFNBQUksSUFBSSxHQUFBWCxZQUFBLEdBQUFDLENBQUEsTUFFckNRLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDVixVQUFVLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FFMUI7QUFBQWYsWUFBQSxHQUFBQyxDQUFBLE9BQ0FRLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDLFNBQVMsQ0FBRVAsVUFBVSxDQUFDLENBQUFQLFlBQUEsR0FBQUMsQ0FBQSxPQUU5QlEsR0FBRyxDQUFDSyxHQUFHLENBQUMsV0FBVyxDQUFFVCxTQUFTLENBQUNXLEtBQUssQ0FBRVgsU0FBUyxDQUFDWSxLQUFLLENBQUNYLGVBQWUsQ0FBQyxDQUFDLENBRXZFO0FBQUFOLFlBQUEsR0FBQUMsQ0FBQSxPQUNBUSxHQUFHLENBQUNTLE1BQU0sQ0FBQ1IsSUFBSSxDQUFFLElBQU0sQ0FBQVYsWUFBQSxHQUFBbUIsQ0FBQSxNQUFBbkIsWUFBQSxHQUFBQyxDQUFBLE9BQ3JCbUIsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCWCxJQUFJLEVBQUUsQ0FBQyxDQUMvQyxDQUFDLENBQUMsQ0FBQVYsWUFBQSxHQUFBQyxDQUFBLE9BRUZxQixNQUFNLENBQUNDLE9BQU8sQ0FBR2QsR0FBRyxDIiwiaWdub3JlTGlzdCI6W119