function cov_28ynb82i31(){var path="D:\\rippers\\rippers-bn-be\\src\\server.js";var hash="4585924601fc5d343ed31f38d7d5435e8bf22542";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\rippers\\rippers-bn-be\\src\\server.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:16},end:{line:2,column:34}},"2":{start:{line:3,column:18},end:{line:3,column:47}},"3":{start:{line:4,column:24},end:{line:4,column:50}},"4":{start:{line:5,column:19},end:{line:5,column:49}},"5":{start:{line:6,column:19},end:{line:6,column:49}},"6":{start:{line:16,column:0},end:{line:16,column:16}},"7":{start:{line:17,column:12},end:{line:17,column:21}},"8":{start:{line:18,column:13},end:{line:18,column:37}},"9":{start:{line:21,column:0},end:{line:21,column:27}},"10":{start:{line:24,column:0},end:{line:24,column:34}},"11":{start:{line:25,column:0},end:{line:25,column:31}},"12":{start:{line:28,column:0},end:{line:28,column:72}},"13":{start:{line:31,column:0},end:{line:33,column:3}},"14":{start:{line:32,column:2},end:{line:32,column:48}},"15":{start:{line:34,column:0},end:{line:34,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:31,column:17},end:{line:31,column:18}},loc:{start:{line:31,column:23},end:{line:33,column:1}},line:31}},branchMap:{"0":{loc:{start:{line:18,column:13},end:{line:18,column:37}},type:"binary-expr",locations:[{start:{line:18,column:13},end:{line:18,column:29}},{start:{line:18,column:33},end:{line:18,column:37}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["dotenv","require","express","swaggerUi","swaggerDocument","userRoutes","authRoutes","config","app","PORT","process","env","use","bodyParser","json","serve","setup","listen","console","log","module","exports"],sourceRoot:"D:\\rippers\\rippers-bn-be\\src\\",sources:["server.js"],sourcesContent:["const dotenv = require('dotenv');\r\nconst express = require('express');\r\nconst swaggerUi = require('swagger-ui-express');\r\nconst swaggerDocument = require('../swagger.json'); // Ensure this path is correct\r\nconst userRoutes = require('./routes/userRoutes'); // Import user routes\r\nconst authRoutes = require('./routes/authRoutes');\r\n// const dotenv = require('dotenv');\r\n// const express = require('express');\r\n// const bodyParser = require('body-parser'); // Import body-parser for JSON parsing\r\n// const swaggerUi = require('swagger-ui-express');\r\n// const swaggerDocument = require('../swagger.json'); // Assuming your swagger.json is located at this path\r\n// const userRoutes = require('./routes/userRoutes'); // Import user routes\r\n// const authRoutes = require('./routes/authRoutes');\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\n// Middleware to parse JSON\r\napp.use(bodyParser.json());\r\n\r\n\r\n\r\n// Set up user routes\r\napp.use('/api/users', userRoutes); // Register the user routes\r\napp.use('/api/v1', authRoutes);\r\n\r\n\r\n// Swagger API documentation route\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n\r\nmodule.exports = app;\r\n"],mappings:"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMG,eAAe,GAAGH,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACnD,MAAMK,UAAU,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAD,MAAM,CAACO,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrB,MAAMO,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;AAErC;AACAD,GAAG,CAACI,GAAG,CAACC,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC;;AAI1B;AACAN,GAAG,CAACI,GAAG,CAAC,YAAY,EAAEP,UAAU,CAAC,CAAC,CAAC;AACnCG,GAAG,CAACI,GAAG,CAAC,SAAS,EAAEN,UAAU,CAAC;;AAG9B;AACAE,GAAG,CAACI,GAAG,CAAC,WAAW,EAAET,SAAS,CAACY,KAAK,EAAEZ,SAAS,CAACa,KAAK,CAACZ,eAAe,CAAC,CAAC;;AAEvE;AACAI,GAAG,CAACS,MAAM,CAACR,IAAI,EAAE,MAAM;EACrBS,OAAO,CAACC,GAAG,CAAC,0BAA0BV,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC;AAEFW,MAAM,CAACC,OAAO,GAAGb,GAAG",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4585924601fc5d343ed31f38d7d5435e8bf22542"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28ynb82i31=function(){return actualCoverage;};}return actualCoverage;}cov_28ynb82i31();const dotenv=(cov_28ynb82i31().s[0]++,require('dotenv'));const express=(cov_28ynb82i31().s[1]++,require('express'));const swaggerUi=(cov_28ynb82i31().s[2]++,require('swagger-ui-express'));const swaggerDocument=(cov_28ynb82i31().s[3]++,require('../swagger.json'));// Ensure this path is correct
const userRoutes=(cov_28ynb82i31().s[4]++,require('./routes/userRoutes'));// Import user routes
const authRoutes=(cov_28ynb82i31().s[5]++,require('./routes/authRoutes'));// const dotenv = require('dotenv');
// const express = require('express');
// const bodyParser = require('body-parser'); // Import body-parser for JSON parsing
// const swaggerUi = require('swagger-ui-express');
// const swaggerDocument = require('../swagger.json'); // Assuming your swagger.json is located at this path
// const userRoutes = require('./routes/userRoutes'); // Import user routes
// const authRoutes = require('./routes/authRoutes');
// Load environment variables from .env file
cov_28ynb82i31().s[6]++;dotenv.config();const app=(cov_28ynb82i31().s[7]++,express());const PORT=(cov_28ynb82i31().s[8]++,(cov_28ynb82i31().b[0][0]++,process.env.PORT)||(cov_28ynb82i31().b[0][1]++,3000));// Middleware to parse JSON
cov_28ynb82i31().s[9]++;app.use(bodyParser.json());// Set up user routes
cov_28ynb82i31().s[10]++;app.use('/api/users',userRoutes);// Register the user routes
cov_28ynb82i31().s[11]++;app.use('/api/v1',authRoutes);// Swagger API documentation route
cov_28ynb82i31().s[12]++;app.use('/api-docs',swaggerUi.serve,swaggerUi.setup(swaggerDocument));// Start the server
cov_28ynb82i31().s[13]++;app.listen(PORT,()=>{cov_28ynb82i31().f[0]++;cov_28ynb82i31().s[14]++;console.log(`Server running on port ${PORT}`);});cov_28ynb82i31().s[15]++;module.exports=app;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiZXhwcmVzcyIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2N1bWVudCIsInVzZXJSb3V0ZXMiLCJhdXRoUm91dGVzIiwiY29uZmlnIiwiYXBwIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInNlcnZlIiwic2V0dXAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXHJpcHBlcnNcXHJpcHBlcnMtYm4tYmVcXHNyY1xcIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHN3YWdnZXJVaSA9IHJlcXVpcmUoJ3N3YWdnZXItdWktZXhwcmVzcycpO1xyXG5jb25zdCBzd2FnZ2VyRG9jdW1lbnQgPSByZXF1aXJlKCcuLi9zd2FnZ2VyLmpzb24nKTsgLy8gRW5zdXJlIHRoaXMgcGF0aCBpcyBjb3JyZWN0XHJcbmNvbnN0IHVzZXJSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyUm91dGVzJyk7IC8vIEltcG9ydCB1c2VyIHJvdXRlc1xyXG5jb25zdCBhdXRoUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXV0aFJvdXRlcycpO1xyXG4vLyBjb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuLy8gY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuLy8gY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IC8vIEltcG9ydCBib2R5LXBhcnNlciBmb3IgSlNPTiBwYXJzaW5nXHJcbi8vIGNvbnN0IHN3YWdnZXJVaSA9IHJlcXVpcmUoJ3N3YWdnZXItdWktZXhwcmVzcycpO1xyXG4vLyBjb25zdCBzd2FnZ2VyRG9jdW1lbnQgPSByZXF1aXJlKCcuLi9zd2FnZ2VyLmpzb24nKTsgLy8gQXNzdW1pbmcgeW91ciBzd2FnZ2VyLmpzb24gaXMgbG9jYXRlZCBhdCB0aGlzIHBhdGhcclxuLy8gY29uc3QgdXNlclJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3VzZXJSb3V0ZXMnKTsgLy8gSW1wb3J0IHVzZXIgcm91dGVzXHJcbi8vIGNvbnN0IGF1dGhSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy9hdXRoUm91dGVzJyk7XHJcblxyXG4vLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlcyBmcm9tIC5lbnYgZmlsZVxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XHJcblxyXG4vLyBNaWRkbGV3YXJlIHRvIHBhcnNlIEpTT05cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5cclxuXHJcbi8vIFNldCB1cCB1c2VyIHJvdXRlc1xyXG5hcHAudXNlKCcvYXBpL3VzZXJzJywgdXNlclJvdXRlcyk7IC8vIFJlZ2lzdGVyIHRoZSB1c2VyIHJvdXRlc1xyXG5hcHAudXNlKCcvYXBpL3YxJywgYXV0aFJvdXRlcyk7XHJcblxyXG5cclxuLy8gU3dhZ2dlciBBUEkgZG9jdW1lbnRhdGlvbiByb3V0ZVxyXG5hcHAudXNlKCcvYXBpLWRvY3MnLCBzd2FnZ2VyVWkuc2VydmUsIHN3YWdnZXJVaS5zZXR1cChzd2FnZ2VyRG9jdW1lbnQpKTtcclxuXHJcbi8vIFN0YXJ0IHRoZSBzZXJ2ZXJcclxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNoQyxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDL0MsTUFBTUcsZUFBZSxHQUFHSCxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0FBQ3BELE1BQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztBQUNuRCxNQUFNSyxVQUFVLEdBQUdMLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBRCxNQUFNLENBQUNPLE1BQU0sQ0FBQyxDQUFDO0FBRWYsTUFBTUMsR0FBRyxHQUFHTixPQUFPLENBQUMsQ0FBQztBQUNyQixNQUFNTyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixJQUFJLElBQUksSUFBSTs7QUFFckM7QUFDQUQsR0FBRyxDQUFDSSxHQUFHLENBQUNDLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFJMUI7QUFDQU4sR0FBRyxDQUFDSSxHQUFHLENBQUMsWUFBWSxFQUFFUCxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ25DRyxHQUFHLENBQUNJLEdBQUcsQ0FBQyxTQUFTLEVBQUVOLFVBQVUsQ0FBQzs7QUFHOUI7QUFDQUUsR0FBRyxDQUFDSSxHQUFHLENBQUMsV0FBVyxFQUFFVCxTQUFTLENBQUNZLEtBQUssRUFBRVosU0FBUyxDQUFDYSxLQUFLLENBQUNaLGVBQWUsQ0FBQyxDQUFDOztBQUV2RTtBQUNBSSxHQUFHLENBQUNTLE1BQU0sQ0FBQ1IsSUFBSSxFQUFFLE1BQU07RUFDckJTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDBCQUEwQlYsSUFBSSxFQUFFLENBQUM7QUFDL0MsQ0FBQyxDQUFDO0FBRUZXLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHYixHQUFHIiwiaWdub3JlTGlzdCI6W119
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjh5bmI4MmkzMSIsImFjdHVhbENvdmVyYWdlIiwiZG90ZW52IiwicyIsInJlcXVpcmUiLCJleHByZXNzIiwic3dhZ2dlclVpIiwic3dhZ2dlckRvY3VtZW50IiwidXNlclJvdXRlcyIsImF1dGhSb3V0ZXMiLCJjb25maWciLCJhcHAiLCJQT1JUIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInNlcnZlIiwic2V0dXAiLCJsaXN0ZW4iLCJmIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJEOlxccmlwcGVyc1xccmlwcGVycy1ibi1iZVxcc3JjXFwvc2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKTtcclxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi4vc3dhZ2dlci5qc29uJyk7IC8vIEVuc3VyZSB0aGlzIHBhdGggaXMgY29ycmVjdFxyXG5jb25zdCB1c2VyUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlclJvdXRlcycpOyAvLyBJbXBvcnQgdXNlciByb3V0ZXNcclxuY29uc3QgYXV0aFJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2F1dGhSb3V0ZXMnKTtcclxuLy8gY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbi8vIGNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbi8vIGNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpOyAvLyBJbXBvcnQgYm9keS1wYXJzZXIgZm9yIEpTT04gcGFyc2luZ1xyXG4vLyBjb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKTtcclxuLy8gY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi4vc3dhZ2dlci5qc29uJyk7IC8vIEFzc3VtaW5nIHlvdXIgc3dhZ2dlci5qc29uIGlzIGxvY2F0ZWQgYXQgdGhpcyBwYXRoXHJcbi8vIGNvbnN0IHVzZXJSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyUm91dGVzJyk7IC8vIEltcG9ydCB1c2VyIHJvdXRlc1xyXG4vLyBjb25zdCBhdXRoUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXV0aFJvdXRlcycpO1xyXG5cclxuLy8gTG9hZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZnJvbSAuZW52IGZpbGVcclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5cclxuLy8gTWlkZGxld2FyZSB0byBwYXJzZSBKU09OXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuXHJcblxyXG4vLyBTZXQgdXAgdXNlciByb3V0ZXNcclxuYXBwLnVzZSgnL2FwaS91c2VycycsIHVzZXJSb3V0ZXMpOyAvLyBSZWdpc3RlciB0aGUgdXNlciByb3V0ZXNcclxuYXBwLnVzZSgnL2FwaS92MScsIGF1dGhSb3V0ZXMpO1xyXG5cclxuXHJcbi8vIFN3YWdnZXIgQVBJIGRvY3VtZW50YXRpb24gcm91dGVcclxuYXBwLnVzZSgnL2FwaS1kb2NzJywgc3dhZ2dlclVpLnNlcnZlLCBzd2FnZ2VyVWkuc2V0dXAoc3dhZ2dlckRvY3VtZW50KSk7XHJcblxyXG4vLyBTdGFydCB0aGUgc2VydmVyXHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBwb3J0ICR7UE9SVH1gKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcclxuIl0sIm1hcHBpbmdzIjoiMi9JQWVPO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZQLEtBQU0sQ0FBQUUsTUFBTSxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUNoQyxLQUFNLENBQUFDLE9BQU8sRUFBQUwsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFDbEMsS0FBTSxDQUFBRSxTQUFTLEVBQUFOLGNBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsRUFDL0MsS0FBTSxDQUFBRyxlQUFlLEVBQUFQLGNBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFBRTtBQUNwRCxLQUFNLENBQUFJLFVBQVUsRUFBQVIsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFO0FBQ25ELEtBQU0sQ0FBQUssVUFBVSxFQUFBVCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEVBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQUosY0FBQSxHQUFBRyxDQUFBLE1BQ0FELE1BQU0sQ0FBQ1EsTUFBTSxDQUFDLENBQUMsQ0FFZixLQUFNLENBQUFDLEdBQUcsRUFBQVgsY0FBQSxHQUFBRyxDQUFBLE1BQUdFLE9BQU8sQ0FBQyxDQUFDLEVBQ3JCLEtBQU0sQ0FBQU8sSUFBSSxFQUFBWixjQUFBLEdBQUFHLENBQUEsTUFBRyxDQUFBSCxjQUFBLEdBQUFhLENBQUEsU0FBQUMsT0FBTyxDQUFDQyxHQUFHLENBQUNILElBQUksSUFBQVosY0FBQSxHQUFBYSxDQUFBLFNBQUksSUFBSSxHQUVyQztBQUFBYixjQUFBLEdBQUFHLENBQUEsTUFDQVEsR0FBRyxDQUFDSyxHQUFHLENBQUNDLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUkxQjtBQUFBbEIsY0FBQSxHQUFBRyxDQUFBLE9BQ0FRLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDLFlBQVksQ0FBRVIsVUFBVSxDQUFDLENBQUU7QUFBQVIsY0FBQSxHQUFBRyxDQUFBLE9BQ25DUSxHQUFHLENBQUNLLEdBQUcsQ0FBQyxTQUFTLENBQUVQLFVBQVUsQ0FBQyxDQUc5QjtBQUFBVCxjQUFBLEdBQUFHLENBQUEsT0FDQVEsR0FBRyxDQUFDSyxHQUFHLENBQUMsV0FBVyxDQUFFVixTQUFTLENBQUNhLEtBQUssQ0FBRWIsU0FBUyxDQUFDYyxLQUFLLENBQUNiLGVBQWUsQ0FBQyxDQUFDLENBRXZFO0FBQUFQLGNBQUEsR0FBQUcsQ0FBQSxPQUNBUSxHQUFHLENBQUNVLE1BQU0sQ0FBQ1QsSUFBSSxDQUFFLElBQU0sQ0FBQVosY0FBQSxHQUFBc0IsQ0FBQSxNQUFBdEIsY0FBQSxHQUFBRyxDQUFBLE9BQ3JCb0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCWixJQUFJLEVBQUUsQ0FBQyxDQUMvQyxDQUFDLENBQUMsQ0FBQVosY0FBQSxHQUFBRyxDQUFBLE9BRUZzQixNQUFNLENBQUNDLE9BQU8sQ0FBR2YsR0FBRyxDIiwiaWdub3JlTGlzdCI6W119