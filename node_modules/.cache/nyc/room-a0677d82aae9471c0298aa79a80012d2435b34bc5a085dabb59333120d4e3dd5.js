'use strict';function cov_25t0m8hgr5(){var path="N:\\Personal Projects\\work-projects\\eric-nomad\\models\\room.js";var hash="875509f9c644bb913a7fb86da88e3bf7cbaf6a1f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"N:\\Personal Projects\\work-projects\\eric-nomad\\models\\room.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:37,column:2}},"2":{start:{line:17,column:2},end:{line:28,column:5}},"3":{start:{line:29,column:2},end:{line:35,column:4}},"4":{start:{line:31,column:4},end:{line:34,column:7}},"5":{start:{line:36,column:2},end:{line:36,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:37,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:19},end:{line:29,column:20}},loc:{start:{line:29,column:29},end:{line:35,column:3}},line:29}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0,"1":0,"2":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Room","associate","models","init","type","STRING","cost","DECIMAL","roomCode","allowNull","unique","modelName","belongsTo","Accommodation","foreignKey","as"],sourceRoot:"N:\\Personal Projects\\work-projects\\eric-nomad\\models\\",sources:["room.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Room extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Room.init({\r\n    type: DataTypes.STRING,\r\n    cost: DataTypes.DECIMAL,\r\n    roomCode:\r\n    {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n      unique: true,\r\n    },\r\n  }, \r\n  \r\n  {\r\n    sequelize,\r\n    modelName: 'Room',\r\n  });\r\n\r\n  Room.associate = (models) => {\r\n    // Room belongs to an Accommodation\r\n    Room.belongsTo(models.Accommodation, {\r\n      foreignKey: \"accommodationId\",\r\n      as: \"accommodation\",\r\n    });\r\n  };\r\n  \r\n  return Room;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,IAAI,SAASN,KAAK,CAAC;IACvB;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,IAAI,CAACG,IAAI,CAAC;IACRC,IAAI,EAAEL,SAAS,CAACM,MAAM;IACtBC,IAAI,EAAEP,SAAS,CAACQ,OAAO;IACvBC,QAAQ,EACR;MACEJ,IAAI,EAAEL,SAAS,CAACM,MAAM;MACtBI,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;IACV;EACF,CAAC,EAED;IACEZ,SAAS;IACTa,SAAS,EAAE;EACb,CAAC,CAAC;EAEFX,IAAI,CAACC,SAAS,GAAIC,MAAM,IAAK;IAC3B;IACAF,IAAI,CAACY,SAAS,CAACV,MAAM,CAACW,aAAa,EAAE;MACnCC,UAAU,EAAE,iBAAiB;MAC7BC,EAAE,EAAE;IACN,CAAC,CAAC;EACJ,CAAC;EAED,OAAOf,IAAI;AACb,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"875509f9c644bb913a7fb86da88e3bf7cbaf6a1f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_25t0m8hgr5=function(){return actualCoverage;};}return actualCoverage;}cov_25t0m8hgr5();const{Model}=(cov_25t0m8hgr5().s[0]++,require('sequelize'));cov_25t0m8hgr5().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_25t0m8hgr5().f[0]++;class Room extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_25t0m8hgr5().f[1]++;}// define association here
}cov_25t0m8hgr5().s[2]++;Room.init({type:DataTypes.STRING,cost:DataTypes.DECIMAL,roomCode:{type:DataTypes.STRING,allowNull:false,unique:true}},{sequelize,modelName:'Room'});cov_25t0m8hgr5().s[3]++;Room.associate=models=>{cov_25t0m8hgr5().f[2]++;cov_25t0m8hgr5().s[4]++;// Room belongs to an Accommodation
Room.belongsTo(models.Accommodation,{foreignKey:"accommodationId",as:"accommodation"});};cov_25t0m8hgr5().s[5]++;return Room;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiUm9vbSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJ0eXBlIiwiU1RSSU5HIiwiY29zdCIsIkRFQ0lNQUwiLCJyb29tQ29kZSIsImFsbG93TnVsbCIsInVuaXF1ZSIsIm1vZGVsTmFtZSIsImJlbG9uZ3NUbyIsIkFjY29tbW9kYXRpb24iLCJmb3JlaWduS2V5IiwiYXMiXSwic291cmNlUm9vdCI6Ik46XFxQZXJzb25hbCBQcm9qZWN0c1xcd29yay1wcm9qZWN0c1xcZXJpYy1ub21hZFxcbW9kZWxzXFwiLCJzb3VyY2VzIjpbInJvb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5jb25zdCB7XHJcbiAgTW9kZWxcclxufSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG4gIGNsYXNzIFJvb20gZXh0ZW5kcyBNb2RlbCB7XHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cclxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBhIHBhcnQgb2YgU2VxdWVsaXplIGxpZmVjeWNsZS5cclxuICAgICAqIFRoZSBgbW9kZWxzL2luZGV4YCBmaWxlIHdpbGwgY2FsbCB0aGlzIG1ldGhvZCBhdXRvbWF0aWNhbGx5LlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYXNzb2NpYXRlKG1vZGVscykge1xyXG4gICAgICAvLyBkZWZpbmUgYXNzb2NpYXRpb24gaGVyZVxyXG4gICAgfVxyXG4gIH1cclxuICBSb29tLmluaXQoe1xyXG4gICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGNvc3Q6IERhdGFUeXBlcy5ERUNJTUFMLFxyXG4gICAgcm9vbUNvZGU6XHJcbiAgICB7XHJcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgfSwgXHJcbiAgXHJcbiAge1xyXG4gICAgc2VxdWVsaXplLFxyXG4gICAgbW9kZWxOYW1lOiAnUm9vbScsXHJcbiAgfSk7XHJcblxyXG4gIFJvb20uYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xyXG4gICAgLy8gUm9vbSBiZWxvbmdzIHRvIGFuIEFjY29tbW9kYXRpb25cclxuICAgIFJvb20uYmVsb25nc1RvKG1vZGVscy5BY2NvbW1vZGF0aW9uLCB7XHJcbiAgICAgIGZvcmVpZ25LZXk6IFwiYWNjb21tb2RhdGlvbklkXCIsXHJcbiAgICAgIGFzOiBcImFjY29tbW9kYXRpb25cIixcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgXHJcbiAgcmV0dXJuIFJvb207XHJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLE1BQU07RUFDSkE7QUFDRixDQUFDLEdBQUdDLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDeEJDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLENBQUNDLFNBQVMsRUFBRUMsU0FBUyxLQUFLO0VBQ3pDLE1BQU1DLElBQUksU0FBU04sS0FBSyxDQUFDO0lBQ3ZCO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7SUFDSSxPQUFPTyxTQUFTQSxDQUFDQyxNQUFNLEVBQUU7TUFDdkI7SUFBQTtFQUVKO0VBQ0FGLElBQUksQ0FBQ0csSUFBSSxDQUFDO0lBQ1JDLElBQUksRUFBRUwsU0FBUyxDQUFDTSxNQUFNO0lBQ3RCQyxJQUFJLEVBQUVQLFNBQVMsQ0FBQ1EsT0FBTztJQUN2QkMsUUFBUSxFQUNSO01BQ0VKLElBQUksRUFBRUwsU0FBUyxDQUFDTSxNQUFNO01BQ3RCSSxTQUFTLEVBQUUsS0FBSztNQUNoQkMsTUFBTSxFQUFFO0lBQ1Y7RUFDRixDQUFDLEVBRUQ7SUFDRVosU0FBUztJQUNUYSxTQUFTLEVBQUU7RUFDYixDQUFDLENBQUM7RUFFRlgsSUFBSSxDQUFDQyxTQUFTLEdBQUlDLE1BQU0sSUFBSztJQUMzQjtJQUNBRixJQUFJLENBQUNZLFNBQVMsQ0FBQ1YsTUFBTSxDQUFDVyxhQUFhLEVBQUU7TUFDbkNDLFVBQVUsRUFBRSxpQkFBaUI7TUFDN0JDLEVBQUUsRUFBRTtJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFFRCxPQUFPZixJQUFJO0FBQ2IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjV0MG04aGdyNSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwibmFtZXMiLCJzb3VyY2VSb290Iiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibWFwcGluZ3MiLCJpZ25vcmVMaXN0IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJSb29tIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsInR5cGUiLCJTVFJJTkciLCJjb3N0IiwiREVDSU1BTCIsInJvb21Db2RlIiwiYWxsb3dOdWxsIiwidW5pcXVlIiwibW9kZWxOYW1lIiwiYmVsb25nc1RvIiwiQWNjb21tb2RhdGlvbiIsImZvcmVpZ25LZXkiLCJhcyJdLCJzb3VyY2VzIjpbIk46XFxQZXJzb25hbCBQcm9qZWN0c1xcd29yay1wcm9qZWN0c1xcZXJpYy1ub21hZFxcbW9kZWxzXFwvcm9vbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHtcclxuICBNb2RlbFxyXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgUm9vbSBleHRlbmRzIE1vZGVsIHtcclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxyXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IGEgcGFydCBvZiBTZXF1ZWxpemUgbGlmZWN5Y2xlLlxyXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3NvY2lhdGUobW9kZWxzKSB7XHJcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXHJcbiAgICB9XHJcbiAgfVxyXG4gIFJvb20uaW5pdCh7XHJcbiAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgY29zdDogRGF0YVR5cGVzLkRFQ0lNQUwsXHJcbiAgICByb29tQ29kZTpcclxuICAgIHtcclxuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgdW5pcXVlOiB0cnVlLFxyXG4gICAgfSxcclxuICB9LCBcclxuICBcclxuICB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdSb29tJyxcclxuICB9KTtcclxuXHJcbiAgUm9vbS5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcbiAgICAvLyBSb29tIGJlbG9uZ3MgdG8gYW4gQWNjb21tb2RhdGlvblxyXG4gICAgUm9vbS5iZWxvbmdzVG8obW9kZWxzLkFjY29tbW9kYXRpb24sIHtcclxuICAgICAgZm9yZWlnbktleTogXCJhY2NvbW1vZGF0aW9uSWRcIixcclxuICAgICAgYXM6IFwiYWNjb21tb2RhdGlvblwiLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuICByZXR1cm4gUm9vbTtcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksVUFBQUEsZUFBQSxNQUFBQyxJQUFBLHlFQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSxxRUFBQU0sWUFBQSxPQUFBQyxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsR0FBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxPQUFBRSxLQUFBLE9BQUFDLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFNBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFVBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLE1BQUFPLFNBQUEsSUFBQUMsQ0FBQSx1Q0FBQUMsQ0FBQSxxQkFBQUMsQ0FBQSxJQUFBQyxjQUFBLEVBQUFDLE9BQUEsR0FBQUMsS0FBQSw4TkFBQUMsVUFBQSw4REFBQUMsT0FBQSxhQUFBQyxjQUFBLHM4QkFBQUMsUUFBQSxtcEJBQUFDLFVBQUEsS0FBQUMsZUFBQSw0Q0FBQTFCLElBQUEsaURBQUEyQixRQUFBLENBQUExQixNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUF3QixRQUFBLENBQUE1QixJQUFBLEdBQUE0QixRQUFBLENBQUE1QixJQUFBLEVBQUFDLElBQUEsR0FBQUEsSUFBQSxFQUFBMkIsUUFBQSxDQUFBNUIsSUFBQSxFQUFBSyxZQUFBLE1BQUF3QixjQUFBLENBQUFELFFBQUEsQ0FBQTVCLElBQUEsR0FjVjtBQUFBRCxjQUFBLFNBQUFBLENBQUEsU0FBQThCLGNBQUEsV0FBQUEsY0FBQSxFQUFBOUIsY0FBQSxHQWJGLEtBQU0sQ0FDSitCLEtBQ0YsQ0FBQyxFQUFBL0IsY0FBQSxHQUFBaUIsQ0FBQSxNQUFHZSxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUFoQyxjQUFBLEdBQUFpQixDQUFBLE1BQ3hCZ0IsTUFBTSxDQUFDQyxPQUFPLENBQUcsQ0FBQ0MsU0FBUyxDQUFFQyxTQUFTLEdBQUssQ0FBQXBDLGNBQUEsR0FBQWtCLENBQUEsTUFDekMsS0FBTSxDQUFBbUIsSUFBSSxRQUFTLENBQUFOLEtBQU0sQ0FDdkI7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNJLE1BQU8sQ0FBQU8sU0FBU0EsQ0FBQ0MsTUFBTSxDQUFFLENBQUF2QyxjQUFBLEdBQUFrQixDQUFBLE1BQ3ZCO0FBRUosQ0FBQWxCLGNBQUEsR0FBQWlCLENBQUEsTUFDQW9CLElBQUksQ0FBQ0csSUFBSSxDQUFDLENBQ1JDLElBQUksQ0FBRUwsU0FBUyxDQUFDTSxNQUFNLENBQ3RCQyxJQUFJLENBQUVQLFNBQVMsQ0FBQ1EsT0FBTyxDQUN2QkMsUUFBUSxDQUNSLENBQ0VKLElBQUksQ0FBRUwsU0FBUyxDQUFDTSxNQUFNLENBQ3RCSSxTQUFTLENBQUUsS0FBSyxDQUNoQkMsTUFBTSxDQUFFLElBQ1YsQ0FDRixDQUFDLENBRUQsQ0FDRVosU0FBUyxDQUNUYSxTQUFTLENBQUUsTUFDYixDQUFDLENBQUMsQ0FBQWhELGNBQUEsR0FBQWlCLENBQUEsTUFFRm9CLElBQUksQ0FBQ0MsU0FBUyxDQUFJQyxNQUFNLEVBQUssQ0FBQXZDLGNBQUEsR0FBQWtCLENBQUEsTUFBQWxCLGNBQUEsR0FBQWlCLENBQUEsTUFDM0I7QUFDQW9CLElBQUksQ0FBQ1ksU0FBUyxDQUFDVixNQUFNLENBQUNXLGFBQWEsQ0FBRSxDQUNuQ0MsVUFBVSxDQUFFLGlCQUFpQixDQUM3QkMsRUFBRSxDQUFFLGVBQ04sQ0FBQyxDQUFDLENBQ0osQ0FBQyxDQUFBcEQsY0FBQSxHQUFBaUIsQ0FBQSxNQUVELE1BQU8sQ0FBQW9CLElBQUksQ0FDYixDQUFDLEMiLCJpZ25vcmVMaXN0IjpbXX0=