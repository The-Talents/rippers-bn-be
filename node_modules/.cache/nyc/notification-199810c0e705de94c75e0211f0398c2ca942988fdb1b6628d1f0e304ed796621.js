'use strict';function cov_2oex7xu7ge(){var path="D:\\rippers\\rippers-bn-be\\models\\notification.js";var hash="1bc377bcb748c8e3c4ddfe87ca1ee97d368a7513";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\rippers\\rippers-bn-be\\models\\notification.js",statementMap:{"0":{start:{line:5,column:4},end:{line:5,column:24}},"1":{start:{line:6,column:0},end:{line:27,column:2}},"2":{start:{line:17,column:2},end:{line:25,column:5}},"3":{start:{line:26,column:2},end:{line:26,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:43},end:{line:27,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:29},end:{line:15,column:5}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},inputSourceMap:{version:3,names:["Model","require","module","exports","sequelize","DataTypes","Notification","associate","models","init","message","TEXT","receiver","INTEGER","sender","status","STRING","modelName"],sourceRoot:"D:\\rippers\\rippers-bn-be\\models\\",sources:["notification.js"],sourcesContent:["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Notification extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  }\r\n  Notification.init({\r\n    message: DataTypes.TEXT,\r\n    receiver: DataTypes.INTEGER,\r\n    sender: DataTypes.INTEGER,\r\n    status: DataTypes.STRING\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Notification',\r\n  });\r\n  return Notification;\r\n};"],mappings:"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,YAAY,SAASN,KAAK,CAAC;IAC/B;AACJ;AACA;AACA;AACA;IACI,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvB;IAAA;EAEJ;EACAF,YAAY,CAACG,IAAI,CAAC;IAChBC,OAAO,EAAEL,SAAS,CAACM,IAAI;IACvBC,QAAQ,EAAEP,SAAS,CAACQ,OAAO;IAC3BC,MAAM,EAAET,SAAS,CAACQ,OAAO;IACzBE,MAAM,EAAEV,SAAS,CAACW;EACpB,CAAC,EAAE;IACDZ,SAAS;IACTa,SAAS,EAAE;EACb,CAAC,CAAC;EACF,OAAOX,YAAY;AACrB,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1bc377bcb748c8e3c4ddfe87ca1ee97d368a7513"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2oex7xu7ge=function(){return actualCoverage;};}return actualCoverage;}cov_2oex7xu7ge();const{Model}=(cov_2oex7xu7ge().s[0]++,require('sequelize'));cov_2oex7xu7ge().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_2oex7xu7ge().f[0]++;class Notification extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_2oex7xu7ge().f[1]++;}// define association here
}cov_2oex7xu7ge().s[2]++;Notification.init({message:DataTypes.TEXT,receiver:DataTypes.INTEGER,sender:DataTypes.INTEGER,status:DataTypes.STRING},{sequelize,modelName:'Notification'});cov_2oex7xu7ge().s[3]++;return Notification;};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiTm90aWZpY2F0aW9uIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsIm1lc3NhZ2UiLCJURVhUIiwicmVjZWl2ZXIiLCJJTlRFR0VSIiwic2VuZGVyIiwic3RhdHVzIiwiU1RSSU5HIiwibW9kZWxOYW1lIl0sInNvdXJjZVJvb3QiOiJEOlxccmlwcGVyc1xccmlwcGVycy1ibi1iZVxcbW9kZWxzXFwiLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHtcclxuICBNb2RlbFxyXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgTm90aWZpY2F0aW9uIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgTm90aWZpY2F0aW9uLmluaXQoe1xyXG4gICAgbWVzc2FnZTogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICByZWNlaXZlcjogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICBzZW5kZXI6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgfSwge1xyXG4gICAgc2VxdWVsaXplLFxyXG4gICAgbW9kZWxOYW1lOiAnTm90aWZpY2F0aW9uJyxcclxuICB9KTtcclxuICByZXR1cm4gTm90aWZpY2F0aW9uO1xyXG59OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWixNQUFNO0VBQ0pBO0FBQ0YsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQ3hCQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDQyxTQUFTLEVBQUVDLFNBQVMsS0FBSztFQUN6QyxNQUFNQyxZQUFZLFNBQVNOLEtBQUssQ0FBQztJQUMvQjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0lBQ0ksT0FBT08sU0FBU0EsQ0FBQ0MsTUFBTSxFQUFFO01BQ3ZCO0lBQUE7RUFFSjtFQUNBRixZQUFZLENBQUNHLElBQUksQ0FBQztJQUNoQkMsT0FBTyxFQUFFTCxTQUFTLENBQUNNLElBQUk7SUFDdkJDLFFBQVEsRUFBRVAsU0FBUyxDQUFDUSxPQUFPO0lBQzNCQyxNQUFNLEVBQUVULFNBQVMsQ0FBQ1EsT0FBTztJQUN6QkUsTUFBTSxFQUFFVixTQUFTLENBQUNXO0VBQ3BCLENBQUMsRUFBRTtJQUNEWixTQUFTO0lBQ1RhLFNBQVMsRUFBRTtFQUNiLENBQUMsQ0FBQztFQUNGLE9BQU9YLFlBQVk7QUFDckIsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm9leDd4dTdnZSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwibmFtZXMiLCJzb3VyY2VSb290Iiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibWFwcGluZ3MiLCJpZ25vcmVMaXN0IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJOb3RpZmljYXRpb24iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwibWVzc2FnZSIsIlRFWFQiLCJyZWNlaXZlciIsIklOVEVHRVIiLCJzZW5kZXIiLCJzdGF0dXMiLCJTVFJJTkciLCJtb2RlbE5hbWUiXSwic291cmNlcyI6WyJEOlxccmlwcGVyc1xccmlwcGVycy1ibi1iZVxcbW9kZWxzXFwvbm90aWZpY2F0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBOb3RpZmljYXRpb24gZXh0ZW5kcyBNb2RlbCB7XHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cclxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBhIHBhcnQgb2YgU2VxdWVsaXplIGxpZmVjeWNsZS5cclxuICAgICAqIFRoZSBgbW9kZWxzL2luZGV4YCBmaWxlIHdpbGwgY2FsbCB0aGlzIG1ldGhvZCBhdXRvbWF0aWNhbGx5LlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYXNzb2NpYXRlKG1vZGVscykge1xyXG4gICAgICAvLyBkZWZpbmUgYXNzb2NpYXRpb24gaGVyZVxyXG4gICAgfVxyXG4gIH1cclxuICBOb3RpZmljYXRpb24uaW5pdCh7XHJcbiAgICBtZXNzYWdlOiBEYXRhVHlwZXMuVEVYVCxcclxuICAgIHJlY2VpdmVyOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIHNlbmRlcjogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5TVFJJTkdcclxuICB9LCB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdOb3RpZmljYXRpb24nLFxyXG4gIH0pO1xyXG4gIHJldHVybiBOb3RpZmljYXRpb247XHJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLFVBQUFBLGVBQUEsTUFBQUMsSUFBQSwyREFBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsdURBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUUsS0FBQSxPQUFBQyxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLE1BQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxTQUFBSSxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxNQUFBTyxTQUFBLElBQUFDLENBQUEsMkJBQUFDLENBQUEsZUFBQUMsQ0FBQSxJQUFBQyxjQUFBLEVBQUFDLE9BQUEsR0FBQUMsS0FBQSx3TEFBQUMsVUFBQSx3Q0FBQUMsT0FBQSxxQkFBQUMsY0FBQSxzc0JBQUFDLFFBQUEsd2RBQUFDLFVBQUEsS0FBQUMsZUFBQSw0Q0FBQTFCLElBQUEsaURBQUEyQixRQUFBLENBQUExQixNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUF3QixRQUFBLENBQUE1QixJQUFBLEdBQUE0QixRQUFBLENBQUE1QixJQUFBLEVBQUFDLElBQUEsR0FBQUEsSUFBQSxFQUFBMkIsUUFBQSxDQUFBNUIsSUFBQSxFQUFBSyxZQUFBLE1BQUF3QixjQUFBLENBQUFELFFBQUEsQ0FBQTVCLElBQUEsR0FjVjtBQUFBRCxjQUFBLFNBQUFBLENBQUEsU0FBQThCLGNBQUEsV0FBQUEsY0FBQSxFQUFBOUIsY0FBQSxHQWJGLEtBQU0sQ0FDSitCLEtBQ0YsQ0FBQyxFQUFBL0IsY0FBQSxHQUFBaUIsQ0FBQSxNQUFHZSxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUFoQyxjQUFBLEdBQUFpQixDQUFBLE1BQ3hCZ0IsTUFBTSxDQUFDQyxPQUFPLENBQUcsQ0FBQ0MsU0FBUyxDQUFFQyxTQUFTLEdBQUssQ0FBQXBDLGNBQUEsR0FBQWtCLENBQUEsTUFDekMsS0FBTSxDQUFBbUIsWUFBWSxRQUFTLENBQUFOLEtBQU0sQ0FDL0I7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNJLE1BQU8sQ0FBQU8sU0FBU0EsQ0FBQ0MsTUFBTSxDQUFFLENBQUF2QyxjQUFBLEdBQUFrQixDQUFBLE1BQ3ZCO0FBRUosQ0FBQWxCLGNBQUEsR0FBQWlCLENBQUEsTUFDQW9CLFlBQVksQ0FBQ0csSUFBSSxDQUFDLENBQ2hCQyxPQUFPLENBQUVMLFNBQVMsQ0FBQ00sSUFBSSxDQUN2QkMsUUFBUSxDQUFFUCxTQUFTLENBQUNRLE9BQU8sQ0FDM0JDLE1BQU0sQ0FBRVQsU0FBUyxDQUFDUSxPQUFPLENBQ3pCRSxNQUFNLENBQUVWLFNBQVMsQ0FBQ1csTUFDcEIsQ0FBQyxDQUFFLENBQ0RaLFNBQVMsQ0FDVGEsU0FBUyxDQUFFLGNBQ2IsQ0FBQyxDQUFDLENBQUFoRCxjQUFBLEdBQUFpQixDQUFBLE1BQ0YsTUFBTyxDQUFBb0IsWUFBWSxDQUNyQixDQUFDLEMiLCJpZ25vcmVMaXN0IjpbXX0=