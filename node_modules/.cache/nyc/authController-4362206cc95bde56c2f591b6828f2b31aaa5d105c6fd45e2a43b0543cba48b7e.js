function cov_1xw766lxzq(){var path="D:\\rippers\\rippers-bn-be\\src\\controllers\\authController.js";var hash="649a0bba3ec708fc11e12785c6508d2616bbdd2b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\rippers\\rippers-bn-be\\src\\controllers\\authController.js",statementMap:{"0":{start:{line:3,column:4},end:{line:3,column:38}},"1":{start:{line:4,column:30},end:{line:33,column:1}},"2":{start:{line:7,column:6},end:{line:7,column:15}},"3":{start:{line:8,column:2},end:{line:13,column:3}},"4":{start:{line:9,column:4},end:{line:12,column:7}},"5":{start:{line:14,column:2},end:{line:32,column:3}},"6":{start:{line:15,column:21},end:{line:15,column:45}},"7":{start:{line:16,column:4},end:{line:20,column:7}},"8":{start:{line:23,column:4},end:{line:23,column:46}},"9":{start:{line:24,column:4},end:{line:24,column:52}},"10":{start:{line:27,column:23},end:{line:27,column:46}},"11":{start:{line:28,column:4},end:{line:31,column:7}},"12":{start:{line:34,column:0},end:{line:36,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:30},end:{line:4,column:31}},loc:{start:{line:4,column:50},end:{line:33,column:1}},line:4}},branchMap:{"0":{loc:{start:{line:8,column:2},end:{line:13,column:3}},type:"if",locations:[{start:{line:8,column:2},end:{line:13,column:3}},{start:{line:8,column:2},end:{line:13,column:3}}],line:8},"1":{loc:{start:{line:27,column:23},end:{line:27,column:46}},type:"binary-expr",locations:[{start:{line:27,column:23},end:{line:27,column:39}},{start:{line:27,column:43},end:{line:27,column:46}}],line:27},"2":{loc:{start:{line:30,column:15},end:{line:30,column:54}},type:"binary-expr",locations:[{start:{line:30,column:15},end:{line:30,column:28}},{start:{line:30,column:32},end:{line:30,column:54}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,names:["googleLogin","require","googleLoginController","req","res","token","query","status","json","message","userData","data","error","console","statusCode","module","exports"],sourceRoot:"D:\\rippers\\rippers-bn-be\\src\\controllers\\",sources:["authController.js"],sourcesContent:["const { googleLogin } = require('../Services/authService');\r\n\r\nconst googleLoginController = async (req, res) => {\r\n  const { token } = req.query;\r\n\r\n  if (!token) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      message: 'Authorization code is required',\r\n    });\r\n  }\r\n\r\n  try {\r\n    const userData = await googleLogin(token);\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: 'Login successful',\r\n      data: userData,\r\n    });\r\n  } catch (error) {\r\n    // Add debug logging\r\n    console.error('Controller error:', error);\r\n    console.error('Status code:', error.statusCode);\r\n    \r\n    // Use the error's status code or default to 400\r\n    const statusCode = error.statusCode || 400;\r\n    \r\n    return res.status(statusCode).json({\r\n      status: statusCode,\r\n      message: error.message || 'Something went wrong',\r\n    });\r\n  }\r\n};\r\n\r\nmodule.exports = { googleLoginController };"],mappings:"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAE1D,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAChD,MAAM;IAAEC;EAAM,CAAC,GAAGF,GAAG,CAACG,KAAK;EAE3B,IAAI,CAACD,KAAK,EAAE;IACV,OAAOD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BD,MAAM,EAAE,GAAG;MACXE,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACK,KAAK,CAAC;IAEzC,OAAOD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BD,MAAM,EAAE,GAAG;MACXE,OAAO,EAAE,kBAAkB;MAC3BE,IAAI,EAAED;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzCC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,UAAU,CAAC;;IAE/C;IACA,MAAMA,UAAU,GAAGF,KAAK,CAACE,UAAU,IAAI,GAAG;IAE1C,OAAOV,GAAG,CAACG,MAAM,CAACO,UAAU,CAAC,CAACN,IAAI,CAAC;MACjCD,MAAM,EAAEO,UAAU;MAClBL,OAAO,EAAEG,KAAK,CAACH,OAAO,IAAI;IAC5B,CAAC,CAAC;EACJ;AACF,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAG;EAAEd;AAAsB,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"649a0bba3ec708fc11e12785c6508d2616bbdd2b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1xw766lxzq=function(){return actualCoverage;};}return actualCoverage;}cov_1xw766lxzq();const{googleLogin}=(cov_1xw766lxzq().s[0]++,require('../Services/authService'));cov_1xw766lxzq().s[1]++;const googleLoginController=async(req,res)=>{cov_1xw766lxzq().f[0]++;const{token}=(cov_1xw766lxzq().s[2]++,req.query);cov_1xw766lxzq().s[3]++;if(!token){cov_1xw766lxzq().b[0][0]++;cov_1xw766lxzq().s[4]++;return res.status(400).json({status:400,message:'Authorization code is required'});}else{cov_1xw766lxzq().b[0][1]++;}cov_1xw766lxzq().s[5]++;try{const userData=(cov_1xw766lxzq().s[6]++,await googleLogin(token));cov_1xw766lxzq().s[7]++;return res.status(200).json({status:200,message:'Login successful',data:userData});}catch(error){cov_1xw766lxzq().s[8]++;// Add debug logging
console.error('Controller error:',error);cov_1xw766lxzq().s[9]++;console.error('Status code:',error.statusCode);// Use the error's status code or default to 400
const statusCode=(cov_1xw766lxzq().s[10]++,(cov_1xw766lxzq().b[1][0]++,error.statusCode)||(cov_1xw766lxzq().b[1][1]++,400));cov_1xw766lxzq().s[11]++;return res.status(statusCode).json({status:statusCode,message:(cov_1xw766lxzq().b[2][0]++,error.message)||(cov_1xw766lxzq().b[2][1]++,'Something went wrong')});}};cov_1xw766lxzq().s[12]++;module.exports={googleLoginController};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnb29nbGVMb2dpbiIsInJlcXVpcmUiLCJnb29nbGVMb2dpbkNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJ0b2tlbiIsInF1ZXJ5Iiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ1c2VyRGF0YSIsImRhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXNDb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXHJpcHBlcnNcXHJpcHBlcnMtYm4tYmVcXHNyY1xcY29udHJvbGxlcnNcXCIsInNvdXJjZXMiOlsiYXV0aENvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBnb29nbGVMb2dpbiB9ID0gcmVxdWlyZSgnLi4vU2VydmljZXMvYXV0aFNlcnZpY2UnKTtcclxuXHJcbmNvbnN0IGdvb2dsZUxvZ2luQ29udHJvbGxlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgdG9rZW4gfSA9IHJlcS5xdWVyeTtcclxuXHJcbiAgaWYgKCF0b2tlbikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgc3RhdHVzOiA0MDAsXHJcbiAgICAgIG1lc3NhZ2U6ICdBdXRob3JpemF0aW9uIGNvZGUgaXMgcmVxdWlyZWQnLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCBnb29nbGVMb2dpbih0b2tlbik7XHJcblxyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgc3RhdHVzOiAyMDAsXHJcbiAgICAgIG1lc3NhZ2U6ICdMb2dpbiBzdWNjZXNzZnVsJyxcclxuICAgICAgZGF0YTogdXNlckRhdGEsXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gQWRkIGRlYnVnIGxvZ2dpbmdcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0NvbnRyb2xsZXIgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgY29uc29sZS5lcnJvcignU3RhdHVzIGNvZGU6JywgZXJyb3Iuc3RhdHVzQ29kZSk7XHJcbiAgICBcclxuICAgIC8vIFVzZSB0aGUgZXJyb3IncyBzdGF0dXMgY29kZSBvciBkZWZhdWx0IHRvIDQwMFxyXG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IGVycm9yLnN0YXR1c0NvZGUgfHwgNDAwO1xyXG4gICAgXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXNDb2RlKS5qc29uKHtcclxuICAgICAgc3RhdHVzOiBzdGF0dXNDb2RlLFxyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8ICdTb21ldGhpbmcgd2VudCB3cm9uZycsXHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ29vZ2xlTG9naW5Db250cm9sbGVyIH07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQVksQ0FBQyxHQUFHQyxPQUFPLENBQUMseUJBQXlCLENBQUM7QUFFMUQsTUFBTUMscUJBQXFCLEdBQUcsTUFBQUEsQ0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDaEQsTUFBTTtJQUFFQztFQUFNLENBQUMsR0FBR0YsR0FBRyxDQUFDRyxLQUFLO0VBRTNCLElBQUksQ0FBQ0QsS0FBSyxFQUFFO0lBQ1YsT0FBT0QsR0FBRyxDQUFDRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUMxQkQsTUFBTSxFQUFFLEdBQUc7TUFDWEUsT0FBTyxFQUFFO0lBQ1gsQ0FBQyxDQUFDO0VBQ0o7RUFFQSxJQUFJO0lBQ0YsTUFBTUMsUUFBUSxHQUFHLE1BQU1WLFdBQVcsQ0FBQ0ssS0FBSyxDQUFDO0lBRXpDLE9BQU9ELEdBQUcsQ0FBQ0csTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7TUFDMUJELE1BQU0sRUFBRSxHQUFHO01BQ1hFLE9BQU8sRUFBRSxrQkFBa0I7TUFDM0JFLElBQUksRUFBRUQ7SUFDUixDQUFDLENBQUM7RUFDSixDQUFDLENBQUMsT0FBT0UsS0FBSyxFQUFFO0lBQ2Q7SUFDQUMsT0FBTyxDQUFDRCxLQUFLLENBQUMsbUJBQW1CLEVBQUVBLEtBQUssQ0FBQztJQUN6Q0MsT0FBTyxDQUFDRCxLQUFLLENBQUMsY0FBYyxFQUFFQSxLQUFLLENBQUNFLFVBQVUsQ0FBQzs7SUFFL0M7SUFDQSxNQUFNQSxVQUFVLEdBQUdGLEtBQUssQ0FBQ0UsVUFBVSxJQUFJLEdBQUc7SUFFMUMsT0FBT1YsR0FBRyxDQUFDRyxNQUFNLENBQUNPLFVBQVUsQ0FBQyxDQUFDTixJQUFJLENBQUM7TUFDakNELE1BQU0sRUFBRU8sVUFBVTtNQUNsQkwsT0FBTyxFQUFFRyxLQUFLLENBQUNILE9BQU8sSUFBSTtJQUM1QixDQUFDLENBQUM7RUFDSjtBQUNGLENBQUM7QUFFRE0sTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFBRWQ7QUFBc0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXh3NzY2bHh6cSIsImFjdHVhbENvdmVyYWdlIiwiZ29vZ2xlTG9naW4iLCJzIiwicmVxdWlyZSIsImdvb2dsZUxvZ2luQ29udHJvbGxlciIsInJlcSIsInJlcyIsImYiLCJ0b2tlbiIsInF1ZXJ5IiwiYiIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidXNlckRhdGEiLCJkYXRhIiwiZXJyb3IiLCJjb25zb2xlIiwic3RhdHVzQ29kZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJEOlxccmlwcGVyc1xccmlwcGVycy1ibi1iZVxcc3JjXFxjb250cm9sbGVyc1xcL2F1dGhDb250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZ29vZ2xlTG9naW4gfSA9IHJlcXVpcmUoJy4uL1NlcnZpY2VzL2F1dGhTZXJ2aWNlJyk7XHJcblxyXG5jb25zdCBnb29nbGVMb2dpbkNvbnRyb2xsZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IHRva2VuIH0gPSByZXEucXVlcnk7XHJcblxyXG4gIGlmICghdG9rZW4pIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XHJcbiAgICAgIHN0YXR1czogNDAwLFxyXG4gICAgICBtZXNzYWdlOiAnQXV0aG9yaXphdGlvbiBjb2RlIGlzIHJlcXVpcmVkJyxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVzZXJEYXRhID0gYXdhaXQgZ29vZ2xlTG9naW4odG9rZW4pO1xyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIHN0YXR1czogMjAwLFxyXG4gICAgICBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCcsXHJcbiAgICAgIGRhdGE6IHVzZXJEYXRhLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIC8vIEFkZCBkZWJ1ZyBsb2dnaW5nXHJcbiAgICBjb25zb2xlLmVycm9yKCdDb250cm9sbGVyIGVycm9yOicsIGVycm9yKTtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1N0YXR1cyBjb2RlOicsIGVycm9yLnN0YXR1c0NvZGUpO1xyXG4gICAgXHJcbiAgICAvLyBVc2UgdGhlIGVycm9yJ3Mgc3RhdHVzIGNvZGUgb3IgZGVmYXVsdCB0byA0MDBcclxuICAgIGNvbnN0IHN0YXR1c0NvZGUgPSBlcnJvci5zdGF0dXNDb2RlIHx8IDQwMDtcclxuICAgIFxyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzQ29kZSkuanNvbih7XHJcbiAgICAgIHN0YXR1czogc3RhdHVzQ29kZSxcclxuICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB8fCAnU29tZXRoaW5nIHdlbnQgd3JvbmcnLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IGdvb2dsZUxvZ2luQ29udHJvbGxlciB9OyJdLCJtYXBwaW5ncyI6Ind6SUFlVztBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWCxLQUFNLENBQUVFLFdBQVksQ0FBQyxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLHlCQUF5QixDQUFDLEVBQUFKLGNBQUEsR0FBQUcsQ0FBQSxNQUUxRCxLQUFNLENBQUFFLHFCQUFxQixDQUFHLEtBQUFBLENBQU9DLEdBQUcsQ0FBRUMsR0FBRyxHQUFLLENBQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUNoRCxLQUFNLENBQUVDLEtBQU0sQ0FBQyxFQUFBVCxjQUFBLEdBQUFHLENBQUEsTUFBR0csR0FBRyxDQUFDSSxLQUFLLEVBQUFWLGNBQUEsR0FBQUcsQ0FBQSxNQUUzQixHQUFJLENBQUNNLEtBQUssQ0FBRSxDQUFBVCxjQUFBLEdBQUFXLENBQUEsU0FBQVgsY0FBQSxHQUFBRyxDQUFBLE1BQ1YsTUFBTyxDQUFBSSxHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQzFCRCxNQUFNLENBQUUsR0FBRyxDQUNYRSxPQUFPLENBQUUsZ0NBQ1gsQ0FBQyxDQUFDLENBQ0osTUFBQWQsY0FBQSxHQUFBVyxDQUFBLFVBQUFYLGNBQUEsR0FBQUcsQ0FBQSxNQUVBLEdBQUksQ0FDRixLQUFNLENBQUFZLFFBQVEsRUFBQWYsY0FBQSxHQUFBRyxDQUFBLE1BQUcsS0FBTSxDQUFBRCxXQUFXLENBQUNPLEtBQUssQ0FBQyxFQUFBVCxjQUFBLEdBQUFHLENBQUEsTUFFekMsTUFBTyxDQUFBSSxHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQzFCRCxNQUFNLENBQUUsR0FBRyxDQUNYRSxPQUFPLENBQUUsa0JBQWtCLENBQzNCRSxJQUFJLENBQUVELFFBQ1IsQ0FBQyxDQUFDLENBQ0osQ0FBRSxNQUFPRSxLQUFLLENBQUUsQ0FBQWpCLGNBQUEsR0FBQUcsQ0FBQSxNQUNkO0FBQ0FlLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLG1CQUFtQixDQUFFQSxLQUFLLENBQUMsQ0FBQWpCLGNBQUEsR0FBQUcsQ0FBQSxNQUN6Q2UsT0FBTyxDQUFDRCxLQUFLLENBQUMsY0FBYyxDQUFFQSxLQUFLLENBQUNFLFVBQVUsQ0FBQyxDQUUvQztBQUNBLEtBQU0sQ0FBQUEsVUFBVSxFQUFBbkIsY0FBQSxHQUFBRyxDQUFBLE9BQUcsQ0FBQUgsY0FBQSxHQUFBVyxDQUFBLFNBQUFNLEtBQUssQ0FBQ0UsVUFBVSxJQUFBbkIsY0FBQSxHQUFBVyxDQUFBLFNBQUksR0FBRyxHQUFBWCxjQUFBLEdBQUFHLENBQUEsT0FFMUMsTUFBTyxDQUFBSSxHQUFHLENBQUNLLE1BQU0sQ0FBQ08sVUFBVSxDQUFDLENBQUNOLElBQUksQ0FBQyxDQUNqQ0QsTUFBTSxDQUFFTyxVQUFVLENBQ2xCTCxPQUFPLENBQUUsQ0FBQWQsY0FBQSxHQUFBVyxDQUFBLFNBQUFNLEtBQUssQ0FBQ0gsT0FBTyxJQUFBZCxjQUFBLEdBQUFXLENBQUEsU0FBSSx1QkFDNUIsQ0FBQyxDQUFDLENBQ0osQ0FDRixDQUFDLENBQUFYLGNBQUEsR0FBQUcsQ0FBQSxPQUVEaUIsTUFBTSxDQUFDQyxPQUFPLENBQUcsQ0FBRWhCLHFCQUFzQixDQUFDLEMiLCJpZ25vcmVMaXN0IjpbXX0=