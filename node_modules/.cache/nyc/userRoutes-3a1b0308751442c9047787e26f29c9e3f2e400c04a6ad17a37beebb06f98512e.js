function cov_2n9ukg3msw(){var path="N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\src\\routes\\userRoutes.js";var hash="0ff22fcb6a22003df7eaf024819b2cbbf3d78c95";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\src\\routes\\userRoutes.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:4,column:4},end:{line:4,column:59}},"2":{start:{line:7,column:4},end:{line:7,column:60}},"3":{start:{line:8,column:15},end:{line:8,column:31}},"4":{start:{line:9,column:0},end:{line:9,column:58}},"5":{start:{line:54,column:0},end:{line:54,column:48}},"6":{start:{line:55,column:0},end:{line:55,column:24}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{},b:{},inputSourceMap:{version:3,names:["express","require","userRegistrationController","userLoginController","router","Router","post","module","exports"],sourceRoot:"N:\\Personal Projects\\The Talent\\Barefoot-Nomand_v1\\rippers-bn-be\\src\\routes\\",sources:["userRoutes.js"],sourcesContent:["const express = require('express');\r\nconst { userRegistrationController } = require('../controllers/UserController/userController');\r\nconst { userLoginController } = require('../controllers/UserController/LoginController');\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/auth/register', userRegistrationController);\r\n/**\r\n * @openapi\r\n * /api/auth/login:\r\n *   post:\r\n *     tags:\r\n *       - Users\r\n *     description: Login a user and return a JWT token\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *                 format: email\r\n *                 example: user@example.com\r\n *               password:\r\n *                 type: string\r\n *                 format: password\r\n *                 example: mysecurepassword\r\n *             required:\r\n *               - email\r\n *               - password\r\n *     responses:\r\n *       '201':\r\n *         description: Login successful\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   example: Login successful\r\n *                 token:\r\n *                   type: string\r\n *                   example: eyJhbGciOiJIUzI1NiIsIn...\r\n *       '401':\r\n *         description: Authentication failed - Invalid credentials\r\n *       '500':\r\n *         description: Internal server error\r\n */\r\nrouter.post('/auth/login', userLoginController);\r\n\r\nmodule.exports = router;\r\n"],mappings:"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC;AAA2B,CAAC,GAAGD,OAAO,CAAC,8CAA8C,CAAC;AAC9F,MAAM;EAAEE;AAAoB,CAAC,GAAGF,OAAO,CAAC,+CAA+C,CAAC;AAExF,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,IAAI,CAAC,gBAAgB,EAAEJ,0BAA0B,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACE,IAAI,CAAC,aAAa,EAAEH,mBAAmB,CAAC;AAE/CI,MAAM,CAACC,OAAO,GAAGJ,MAAM",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0ff22fcb6a22003df7eaf024819b2cbbf3d78c95"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2n9ukg3msw=function(){return actualCoverage;};}return actualCoverage;}cov_2n9ukg3msw();const express=(cov_2n9ukg3msw().s[0]++,require('express'));const{userRegistrationController}=(cov_2n9ukg3msw().s[1]++,require('../controllers/UserController/userController'));const{userLoginController}=(cov_2n9ukg3msw().s[2]++,require('../controllers/UserController/LoginController'));const router=(cov_2n9ukg3msw().s[3]++,express.Router());cov_2n9ukg3msw().s[4]++;router.post('/auth/register',userRegistrationController);/**
 * @openapi
 * /api/auth/login:
 *   post:
 *     tags:
 *       - Users
 *     description: Login a user and return a JWT token
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               email:
 *                 type: string
 *                 format: email
 *                 example: user@example.com
 *               password:
 *                 type: string
 *                 format: password
 *                 example: mysecurepassword
 *             required:
 *               - email
 *               - password
 *     responses:
 *       '201':
 *         description: Login successful
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                   example: Login successful
 *                 token:
 *                   type: string
 *                   example: eyJhbGciOiJIUzI1NiIsIn...
 *       '401':
 *         description: Authentication failed - Invalid credentials
 *       '500':
 *         description: Internal server error
 */cov_2n9ukg3msw().s[5]++;router.post('/auth/login',userLoginController);cov_2n9ukg3msw().s[6]++;module.exports=router;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInVzZXJSZWdpc3RyYXRpb25Db250cm9sbGVyIiwidXNlckxvZ2luQ29udHJvbGxlciIsInJvdXRlciIsIlJvdXRlciIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJOOlxcUGVyc29uYWwgUHJvamVjdHNcXFRoZSBUYWxlbnRcXEJhcmVmb290LU5vbWFuZF92MVxccmlwcGVycy1ibi1iZVxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXMiOlsidXNlclJvdXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCB7IHVzZXJSZWdpc3RyYXRpb25Db250cm9sbGVyIH0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9Vc2VyQ29udHJvbGxlci91c2VyQ29udHJvbGxlcicpO1xyXG5jb25zdCB7IHVzZXJMb2dpbkNvbnRyb2xsZXIgfSA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL1VzZXJDb250cm9sbGVyL0xvZ2luQ29udHJvbGxlcicpO1xyXG5cclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnJvdXRlci5wb3N0KCcvYXV0aC9yZWdpc3RlcicsIHVzZXJSZWdpc3RyYXRpb25Db250cm9sbGVyKTtcclxuLyoqXHJcbiAqIEBvcGVuYXBpXHJcbiAqIC9hcGkvYXV0aC9sb2dpbjpcclxuICogICBwb3N0OlxyXG4gKiAgICAgdGFnczpcclxuICogICAgICAgLSBVc2Vyc1xyXG4gKiAgICAgZGVzY3JpcHRpb246IExvZ2luIGEgdXNlciBhbmQgcmV0dXJuIGEgSldUIHRva2VuXHJcbiAqICAgICByZXF1ZXN0Qm9keTpcclxuICogICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICogICAgICAgY29udGVudDpcclxuICogICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICBlbWFpbDpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgZm9ybWF0OiBlbWFpbFxyXG4gKiAgICAgICAgICAgICAgICAgZXhhbXBsZTogdXNlckBleGFtcGxlLmNvbVxyXG4gKiAgICAgICAgICAgICAgIHBhc3N3b3JkOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgICBmb3JtYXQ6IHBhc3N3b3JkXHJcbiAqICAgICAgICAgICAgICAgICBleGFtcGxlOiBteXNlY3VyZXBhc3N3b3JkXHJcbiAqICAgICAgICAgICAgIHJlcXVpcmVkOlxyXG4gKiAgICAgICAgICAgICAgIC0gZW1haWxcclxuICogICAgICAgICAgICAgICAtIHBhc3N3b3JkXHJcbiAqICAgICByZXNwb25zZXM6XHJcbiAqICAgICAgICcyMDEnOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBMb2dpbiBzdWNjZXNzZnVsXHJcbiAqICAgICAgICAgY29udGVudDpcclxuICogICAgICAgICAgIGFwcGxpY2F0aW9uL2pzb246XHJcbiAqICAgICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgICAgICAgICBwcm9wZXJ0aWVzOlxyXG4gKiAgICAgICAgICAgICAgICAgbWVzc2FnZTpcclxuICogICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgICAgIGV4YW1wbGU6IExvZ2luIHN1Y2Nlc3NmdWxcclxuICogICAgICAgICAgICAgICAgIHRva2VuOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICAgICAgZXhhbXBsZTogZXlKaGJHY2lPaUpJVXpJMU5pSXNJbi4uLlxyXG4gKiAgICAgICAnNDAxJzpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogQXV0aGVudGljYXRpb24gZmFpbGVkIC0gSW52YWxpZCBjcmVkZW50aWFsc1xyXG4gKiAgICAgICAnNTAwJzpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogSW50ZXJuYWwgc2VydmVyIGVycm9yXHJcbiAqL1xyXG5yb3V0ZXIucG9zdCgnL2F1dGgvbG9naW4nLCB1c2VyTG9naW5Db250cm9sbGVyKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNO0VBQUVDO0FBQTJCLENBQUMsR0FBR0QsT0FBTyxDQUFDLDhDQUE4QyxDQUFDO0FBQzlGLE1BQU07RUFBRUU7QUFBb0IsQ0FBQyxHQUFHRixPQUFPLENBQUMsK0NBQStDLENBQUM7QUFFeEYsTUFBTUcsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQU0sQ0FBQyxDQUFDO0FBRS9CRCxNQUFNLENBQUNFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRUosMEJBQTBCLENBQUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRSxNQUFNLENBQUNFLElBQUksQ0FBQyxhQUFhLEVBQUVILG1CQUFtQixDQUFDO0FBRS9DSSxNQUFNLENBQUNDLE9BQU8sR0FBR0osTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm45dWtnM21zdyIsImFjdHVhbENvdmVyYWdlIiwiZXhwcmVzcyIsInMiLCJyZXF1aXJlIiwidXNlclJlZ2lzdHJhdGlvbkNvbnRyb2xsZXIiLCJ1c2VyTG9naW5Db250cm9sbGVyIiwicm91dGVyIiwiUm91dGVyIiwicG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJOOlxcUGVyc29uYWwgUHJvamVjdHNcXFRoZSBUYWxlbnRcXEJhcmVmb290LU5vbWFuZF92MVxccmlwcGVycy1ibi1iZVxcc3JjXFxyb3V0ZXNcXC91c2VyUm91dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHsgdXNlclJlZ2lzdHJhdGlvbkNvbnRyb2xsZXIgfSA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL1VzZXJDb250cm9sbGVyL3VzZXJDb250cm9sbGVyJyk7XHJcbmNvbnN0IHsgdXNlckxvZ2luQ29udHJvbGxlciB9ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvVXNlckNvbnRyb2xsZXIvTG9naW5Db250cm9sbGVyJyk7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxucm91dGVyLnBvc3QoJy9hdXRoL3JlZ2lzdGVyJywgdXNlclJlZ2lzdHJhdGlvbkNvbnRyb2xsZXIpO1xyXG4vKipcclxuICogQG9wZW5hcGlcclxuICogL2FwaS9hdXRoL2xvZ2luOlxyXG4gKiAgIHBvc3Q6XHJcbiAqICAgICB0YWdzOlxyXG4gKiAgICAgICAtIFVzZXJzXHJcbiAqICAgICBkZXNjcmlwdGlvbjogTG9naW4gYSB1c2VyIGFuZCByZXR1cm4gYSBKV1QgdG9rZW5cclxuICogICAgIHJlcXVlc3RCb2R5OlxyXG4gKiAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gKiAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgIGFwcGxpY2F0aW9uL2pzb246XHJcbiAqICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICBwcm9wZXJ0aWVzOlxyXG4gKiAgICAgICAgICAgICAgIGVtYWlsOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgICBmb3JtYXQ6IGVtYWlsXHJcbiAqICAgICAgICAgICAgICAgICBleGFtcGxlOiB1c2VyQGV4YW1wbGUuY29tXHJcbiAqICAgICAgICAgICAgICAgcGFzc3dvcmQ6XHJcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICAgIGZvcm1hdDogcGFzc3dvcmRcclxuICogICAgICAgICAgICAgICAgIGV4YW1wbGU6IG15c2VjdXJlcGFzc3dvcmRcclxuICogICAgICAgICAgICAgcmVxdWlyZWQ6XHJcbiAqICAgICAgICAgICAgICAgLSBlbWFpbFxyXG4gKiAgICAgICAgICAgICAgIC0gcGFzc3dvcmRcclxuICogICAgIHJlc3BvbnNlczpcclxuICogICAgICAgJzIwMSc6XHJcbiAqICAgICAgICAgZGVzY3JpcHRpb246IExvZ2luIHN1Y2Nlc3NmdWxcclxuICogICAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgICBtZXNzYWdlOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICAgICAgZXhhbXBsZTogTG9naW4gc3VjY2Vzc2Z1bFxyXG4gKiAgICAgICAgICAgICAgICAgdG9rZW46XHJcbiAqICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgICBleGFtcGxlOiBleUpoYkdjaU9pSklVekkxTmlJc0luLi4uXHJcbiAqICAgICAgICc0MDEnOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBBdXRoZW50aWNhdGlvbiBmYWlsZWQgLSBJbnZhbGlkIGNyZWRlbnRpYWxzXHJcbiAqICAgICAgICc1MDAnOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcclxuICovXHJcbnJvdXRlci5wb3N0KCcvYXV0aC9sb2dpbicsIHVzZXJMb2dpbkNvbnRyb2xsZXIpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IjRySEFhQTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FiQSxLQUFNLENBQUFFLE9BQU8sRUFBQUYsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFDbEMsS0FBTSxDQUFFQywwQkFBMkIsQ0FBQyxFQUFBTCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLDhDQUE4QyxDQUFDLEVBQzlGLEtBQU0sQ0FBRUUsbUJBQW9CLENBQUMsRUFBQU4sY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQywrQ0FBK0MsQ0FBQyxFQUV4RixLQUFNLENBQUFHLE1BQU0sRUFBQVAsY0FBQSxHQUFBRyxDQUFBLE1BQUdELE9BQU8sQ0FBQ00sTUFBTSxDQUFDLENBQUMsRUFBQVIsY0FBQSxHQUFBRyxDQUFBLE1BRS9CSSxNQUFNLENBQUNFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBRUosMEJBQTBCLENBQUMsQ0FDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQTNDQUwsY0FBQSxHQUFBRyxDQUFBLE1BNENBSSxNQUFNLENBQUNFLElBQUksQ0FBQyxhQUFhLENBQUVILG1CQUFtQixDQUFDLENBQUFOLGNBQUEsR0FBQUcsQ0FBQSxNQUUvQ08sTUFBTSxDQUFDQyxPQUFPLENBQUdKLE1BQU0sQyIsImlnbm9yZUxpc3QiOltdfQ==