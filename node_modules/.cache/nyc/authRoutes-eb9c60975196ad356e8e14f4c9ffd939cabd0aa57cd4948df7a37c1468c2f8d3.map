{"version":3,"names":["express","require","googleLoginController","router","Router","get","module","exports"],"sourceRoot":"D:\\rippers\\rippers-bn-be\\src\\routes\\","sources":["authRoutes.js"],"sourcesContent":["\r\nconst express = require('express');\r\nconst { googleLoginController } = require('../controllers/authController');\r\nconst router = express.Router();\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/google-login:\r\n *   get:\r\n *     summary: Login with Google\r\n *     description: Authenticate a user using Google OAuth.\r\n *     parameters:\r\n *       - in: query\r\n *         name: token\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: Google OAuth token.\r\n *     responses:\r\n *       200:\r\n *         description: Login successful.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 status:\r\n *                   type: integer\r\n *                   example: 200\r\n *                 message:\r\n *                   type: string\r\n *                   example: Login successful\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     userId:\r\n *                       type: integer\r\n *                       example: 1\r\n *                     email:\r\n *                       type: string\r\n *                       example: test@example.com\r\n *                     token:\r\n *                       type: string\r\n *                       example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\r\n *       400:\r\n *         description: Invalid token or missing token.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 status:\r\n *                   type: integer\r\n *                   example: 400\r\n *                 message:\r\n *                   type: string\r\n *                   example: Invalid token\r\n *       404:\r\n *         description: User does not exist.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 status:\r\n *                   type: integer\r\n *                   example: 404\r\n *                 message:\r\n *                   type: string\r\n *                   example: Account does not exist. Please create an account first.\r\n */\r\nrouter.get('/auth/google-login', googleLoginController);\r\n\r\nmodule.exports = router;"],"mappings":"AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC;AAAsB,CAAC,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC1E,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,MAAM,CAACE,GAAG,CAAC,oBAAoB,EAAEH,qBAAqB,CAAC;AAEvDI,MAAM,CAACC,OAAO,GAAGJ,MAAM","ignoreList":[]}